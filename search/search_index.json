{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Introduction Projectile motion is a fundamental topic in mechanics that describes the motion of an object launched into the air under the influence of gravity, assuming no air resistance. The horizontal distance traveled by the projectile, known as the range , is a function of the launch angle and initial velocity. Theoretical Background The motion of a projectile can be analyzed by decomposing it into horizontal and vertical components. The equations of motion are: Equations of Motion Horizontal motion: \\(x = v_0 \\cos(\\theta) t\\) Since there is no acceleration in the horizontal direction (ignoring air resistance), the horizontal velocity remains constant. Vertical motion: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) where \\(g\\) is the acceleration due to gravity. We\u2019re analyzing projectile motion where an object is launched at an angle \\(\\theta\\) with an initial velocity \\(v_0\\) , and lands at the same height it was launched from. 1. Total Time of Flight Vertical motion equation: \\[ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] To find total flight time , set \\(y = 0\\) (back at launch height): \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] Factor: \\[ t \\left( v_0 \\sin(\\theta) - \\frac{1}{2} g t \\right) = 0 \\] Solutions: \\(t = 0\\) (initial launch) \\(t = \\frac{2 v_0 \\sin(\\theta)}{g}\\) So the total time of flight is: \\[ t_{\\text{total}} = \\frac{2 v_0 \\sin(\\theta)}{g} \\] 2. Horizontal Range Now we consider horizontal motion. There\u2019s no acceleration horizontally, so it's a simple: Distance = speed \u00d7 time Horizontal velocity is: \\[ v_0 \\cos(\\theta) \\] Multiply by total flight time to get the range : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Use identity: \\[ 2 \\sin(\\theta) \\cos(\\theta) = \\sin(2\\theta) \\] So: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Summary Total Time of Flight: $$ t_{\\text{total}} = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Range: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ How Range Depends on the Angle of Projection The formula for the horizontal range of a projectile is: \\[ R(\\theta) = \\frac{v_0^2}{g} \\cdot \\sin(2\\theta) \\] Where: \\(v_0\\) is the initial velocity, \\(g\\) is the acceleration due to gravity, \\(\\theta\\) is the angle of projection, and \\(\\sin(2\\theta)\\) captures how the angle affects the range. Angle Observations The range depends on \\(\\sin(2\\theta)\\) , which reaches its maximum value when \\(\\theta = 45^\\circ\\) . Therefore, the maximum range occurs when the projectile is launched at 45 degrees . The function \\(\\sin(2\\theta)\\) is symmetric about \\(45^\\circ\\) : For example, \\(30^\\circ\\) and \\(60^\\circ\\) give the same range . Similarly, \\(20^\\circ\\) and \\(70^\\circ\\) give the same range. Graph Shape: If you were to graph the range against the angle \\(\\theta\\) , you would get a sine curve shape, peaking at \\(45^\\circ\\) and symmetric on both sides. This symmetry explains why certain pairs of angles produce the same horizontal range. Visualization of Range Constants Gravitational acceleration on Earth: \\(g_{earth} = 9.81\\) m/s\u00b2 Gravitational acceleration on the Moon: \\(g_{moon} = 1.62\\) m/s\u00b2 Initial velocities considered: \\(10, 20, 30\\) m/s Range Calculation and Visualization We analyze the range for different launch angles (0\u00b0 to 90\u00b0) and compare it for Earth and Moon conditions. Projectile Motion Simulation This interactive simulation shows how the range of a projectile changes with the launch angle . Click here to view the simulation Enter the initial velocity and see how the range changes dynamically! Observations The range is maximized at \\(\\theta = 45^\\circ\\) . Increasing \\(v_0\\) increases the overall range. The range is significantly greater on the Moon due to lower gravity. Numerical Example For an initial velocity of \\(v_0 = 20\\) m/s and a launch angle of \\(\\theta = 45^\\circ\\) : On Earth: \\(R = \\frac{20^2 \\sin(90^\\circ)}{9.81} \\approx 40.8 \\text{ m}\\) On the Moon: \\(R = \\frac{20^2 \\sin(90^\\circ)}{1.62} \\approx 247.8 \\text{ m}\\) Practical Applications Ballistics : Understanding projectile motion is crucial for artillery and missile trajectories. Sports : Optimizing the launch angle in sports like basketball, soccer, and golf. Space Exploration : Calculating trajectories for lunar landings and rover deployments.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#introduction","text":"Projectile motion is a fundamental topic in mechanics that describes the motion of an object launched into the air under the influence of gravity, assuming no air resistance. The horizontal distance traveled by the projectile, known as the range , is a function of the launch angle and initial velocity.","title":"Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-background","text":"The motion of a projectile can be analyzed by decomposing it into horizontal and vertical components. The equations of motion are:","title":"Theoretical Background"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"Horizontal motion: \\(x = v_0 \\cos(\\theta) t\\) Since there is no acceleration in the horizontal direction (ignoring air resistance), the horizontal velocity remains constant. Vertical motion: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) where \\(g\\) is the acceleration due to gravity. We\u2019re analyzing projectile motion where an object is launched at an angle \\(\\theta\\) with an initial velocity \\(v_0\\) , and lands at the same height it was launched from.","title":"Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-total-time-of-flight","text":"Vertical motion equation: \\[ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] To find total flight time , set \\(y = 0\\) (back at launch height): \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] Factor: \\[ t \\left( v_0 \\sin(\\theta) - \\frac{1}{2} g t \\right) = 0 \\] Solutions: \\(t = 0\\) (initial launch) \\(t = \\frac{2 v_0 \\sin(\\theta)}{g}\\) So the total time of flight is: \\[ t_{\\text{total}} = \\frac{2 v_0 \\sin(\\theta)}{g} \\]","title":"1. Total Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-horizontal-range","text":"Now we consider horizontal motion. There\u2019s no acceleration horizontally, so it's a simple:","title":"2. Horizontal Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#distance-speed-time","text":"Horizontal velocity is: \\[ v_0 \\cos(\\theta) \\] Multiply by total flight time to get the range : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Use identity: \\[ 2 \\sin(\\theta) \\cos(\\theta) = \\sin(2\\theta) \\] So: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\]","title":"Distance = speed \u00d7 time"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#summary","text":"Total Time of Flight: $$ t_{\\text{total}} = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Range: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$","title":"Summary"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#how-range-depends-on-the-angle-of-projection","text":"The formula for the horizontal range of a projectile is: \\[ R(\\theta) = \\frac{v_0^2}{g} \\cdot \\sin(2\\theta) \\] Where: \\(v_0\\) is the initial velocity, \\(g\\) is the acceleration due to gravity, \\(\\theta\\) is the angle of projection, and \\(\\sin(2\\theta)\\) captures how the angle affects the range.","title":"How Range Depends on the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#angle-observations","text":"The range depends on \\(\\sin(2\\theta)\\) , which reaches its maximum value when \\(\\theta = 45^\\circ\\) . Therefore, the maximum range occurs when the projectile is launched at 45 degrees . The function \\(\\sin(2\\theta)\\) is symmetric about \\(45^\\circ\\) : For example, \\(30^\\circ\\) and \\(60^\\circ\\) give the same range . Similarly, \\(20^\\circ\\) and \\(70^\\circ\\) give the same range.","title":"Angle Observations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graph-shape","text":"If you were to graph the range against the angle \\(\\theta\\) , you would get a sine curve shape, peaking at \\(45^\\circ\\) and symmetric on both sides. This symmetry explains why certain pairs of angles produce the same horizontal range.","title":"Graph Shape:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#visualization-of-range","text":"","title":"Visualization of Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"Gravitational acceleration on Earth: \\(g_{earth} = 9.81\\) m/s\u00b2 Gravitational acceleration on the Moon: \\(g_{moon} = 1.62\\) m/s\u00b2 Initial velocities considered: \\(10, 20, 30\\) m/s","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-calculation-and-visualization","text":"We analyze the range for different launch angles (0\u00b0 to 90\u00b0) and compare it for Earth and Moon conditions.","title":"Range Calculation and Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-simulation","text":"This interactive simulation shows how the range of a projectile changes with the launch angle . Click here to view the simulation Enter the initial velocity and see how the range changes dynamically!","title":"Projectile Motion Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#observations","text":"The range is maximized at \\(\\theta = 45^\\circ\\) . Increasing \\(v_0\\) increases the overall range. The range is significantly greater on the Moon due to lower gravity.","title":"Observations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#numerical-example","text":"For an initial velocity of \\(v_0 = 20\\) m/s and a launch angle of \\(\\theta = 45^\\circ\\) : On Earth: \\(R = \\frac{20^2 \\sin(90^\\circ)}{9.81} \\approx 40.8 \\text{ m}\\) On the Moon: \\(R = \\frac{20^2 \\sin(90^\\circ)}{1.62} \\approx 247.8 \\text{ m}\\)","title":"Numerical Example"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"Ballistics : Understanding projectile motion is crucial for artillery and missile trajectories. Sports : Optimizing the launch angle in sports like basketball, soccer, and golf. Space Exploration : Calculating trajectories for lunar landings and rover deployments.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Theoretical Foundation The forced damped pendulum is a captivating example of a physical system with intricate behavior resulting from the interplay of damping, restoring forces, and external driving forces. By introducing both damping and external periodic forcing, the system demonstrates a transition from simple harmonic motion to a rich spectrum of dynamics, including resonance, chaos, and quasiperiodic behavior. These phenomena serve as a foundation for understanding complex real-world systems, such as driven oscillators, climate systems, and mechanical structures under periodic stress. Types of Pendulums 1. Regular Pendulum (No damping or force) This is just a mass on a string, swinging under gravity. Motion is smooth and regular. If you lift and release it, it keeps swinging back and forth. It has a natural frequency depending on length and gravity. 2. Damped Pendulum Now we add damping , which means it loses energy over time (due to air resistance or friction in the pivot). The pendulum slows down. Eventually, it comes to rest. Damping is modeled by a term like \\(b \\frac{d\\theta}{dt}\\) in the equation (where \\(b\\) is the damping coefficient). 3. Forced Pendulum Now imagine we keep pushing the pendulum at regular intervals \u2014 like tapping it with a finger over and over. This is a driving force or external forcing . It\u2019s usually sinusoidal: \\(A \\cos(\\omega t)\\) \u2014 like a wave that keeps pushing the pendulum. Even though it loses energy through damping, the external force feeds energy back in . Governing Equation The motion of a forced damped pendulum is governed by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma\\frac{d\\theta}{dt} + \\sin(\\theta) = F_d\\cos(\\omega_d t) \\] where: \\(\\theta\\) is the angular displacement, Angular displacement measures how far an object has rotated from its starting position \u2014 like how much a pendulum has swung from its resting point. \\(\\gamma\\) is the damping coefficient, which quantifies the strength of damping (friction or resistance) in the system. \\(F_d\\) is the amplitude of the external forcing, representing the maximum strength of the periodic external force applied to the system. \\(\\omega_d\\) is the driving frequency. which is the frequency of the external periodic force driving the system. For small angles, we approximate \\(\\sin(\\theta) \\approx \\theta\\) , simplifying the equation to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma\\frac{d\\theta}{dt} + \\theta = F_d\\cos(\\omega_d t) \\] This equation resembles the standard damped driven oscillator. Approximate Solutions The general solution for small-angle oscillations can be expressed as: \\[ \\theta(t) = A e^{-\\gamma t} \\cos(\\omega t + \\phi) + \\theta_{p}(t) \\] where \\(\\theta_{p}(t)\\) is the particular solution due to external forcing. The amplitude and phase of the response depend on resonance conditions. Resonance Conditions Resonance occurs when the driving frequency \\(\\omega_d\\) is close to the system's natural frequency: \\[ \\omega_0 = \\sqrt{1 - \\gamma^2} \\] Example In python script At resonance, the amplitude of oscillations peaks, which can be critical in engineering applications such as bridges and buildings. For example, the Tacoma Narrows Bridge collapse was a consequence of wind-induced resonance. Energy Considerations The total energy of the system is affected by damping and external forcing. The balance between energy input and dissipation determines whether oscillations persist, decay, or become chaotic. Analysis of Dynamics Influence of System Parameters The behavior of the forced damped pendulum depends on the parameters \\(\\gamma\\) , \\(F_d\\) , and \\(\\omega_d\\) : Damping Coefficient ( \\(\\gamma\\) ): High damping reduces oscillations and accelerates settling. Low damping prolongs oscillations and can lead to chaotic behavior. Driving Amplitude ( \\(F_d\\) ): Small \\(F_d\\) results in nearly harmonic motion. Large \\(F_d\\) may induce chaos. Driving Frequency ( \\(\\omega_d\\) ): Near resonance ( \\(\\omega_d \\approx \\omega_0\\) ), the amplitude is maximized. Off-resonance driving leads to steady oscillations at lower amplitudes. Transition from Regular to Chaotic Motion The system undergoes a transition through different dynamic regimes: Regular Motion: At low forcing, motion is periodic and predictable. Quasiperiodic Motion: Increased forcing introduces complex but non-chaotic patterns. Chaotic Motion: High \\(F_d\\) leads to chaotic behavior with extreme sensitivity to initial conditions. Chaos Analysis The transition to chaos is analyzed using: Poincar\\'e Sections to identify periodic and chaotic attractors. Bifurcation Diagrams showing transitions between periodicity and chaos. Lyapunov Exponents quantifying sensitivity to initial conditions. These analyses help understand chaotic behavior in physical systems like climate models, mechanical oscillators, and biological rhythms. Step 1: Define the Forced Damped Pendulum Equation \ud83d\udc49 Click here to view the simulation \ud83d\udc48 The equation of motion for a forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + \\frac{b}{m} \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = F \\cos(\\omega_d t) \\] Where: \\(\\theta\\) : Angular displacement. \\(b\\) : Damping coefficient. \\(m\\) : Mass of the pendulum bob. \\(g\\) : Acceleration due to gravity. \\(L\\) : Length of the pendulum. \\(F\\) : Amplitude of the driving force. \\(\\omega_d\\) : Angular frequency of the driving force. This can be rewritten as a system of first-order differential equations: \\[ \\frac{d\\theta}{dt} = \\omega \\] \\[ \\frac{d\\omega}{dt} = -\\frac{b}{m} \\omega - \\frac{g}{L} \\sin(\\theta) + F \\cos(\\omega_d t) \\] Step 2: Implement the Model in Python Below is the Python code to simulate the system: A phase diagram plots the angular velocity \\(\\omega\\) against the angular displacement \\(\\theta\\) Step 4: Plot Poincar\u00e9 Sections A Poincar\u00e9 section is a way to visualize chaotic behavior. We sample the system at a fixed phase of the driving force (e.g., every \\(2\\pi/\\omega_d\\) )","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theoretical-foundation","text":"The forced damped pendulum is a captivating example of a physical system with intricate behavior resulting from the interplay of damping, restoring forces, and external driving forces. By introducing both damping and external periodic forcing, the system demonstrates a transition from simple harmonic motion to a rich spectrum of dynamics, including resonance, chaos, and quasiperiodic behavior. These phenomena serve as a foundation for understanding complex real-world systems, such as driven oscillators, climate systems, and mechanical structures under periodic stress.","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#types-of-pendulums","text":"","title":"Types of Pendulums"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-regular-pendulum-no-damping-or-force","text":"This is just a mass on a string, swinging under gravity. Motion is smooth and regular. If you lift and release it, it keeps swinging back and forth. It has a natural frequency depending on length and gravity.","title":"1. Regular Pendulum (No damping or force)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-damped-pendulum","text":"Now we add damping , which means it loses energy over time (due to air resistance or friction in the pivot). The pendulum slows down. Eventually, it comes to rest. Damping is modeled by a term like \\(b \\frac{d\\theta}{dt}\\) in the equation (where \\(b\\) is the damping coefficient).","title":"2. Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-forced-pendulum","text":"Now imagine we keep pushing the pendulum at regular intervals \u2014 like tapping it with a finger over and over. This is a driving force or external forcing . It\u2019s usually sinusoidal: \\(A \\cos(\\omega t)\\) \u2014 like a wave that keeps pushing the pendulum. Even though it loses energy through damping, the external force feeds energy back in .","title":"3. Forced Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped pendulum is governed by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma\\frac{d\\theta}{dt} + \\sin(\\theta) = F_d\\cos(\\omega_d t) \\] where: \\(\\theta\\) is the angular displacement, Angular displacement measures how far an object has rotated from its starting position \u2014 like how much a pendulum has swung from its resting point. \\(\\gamma\\) is the damping coefficient, which quantifies the strength of damping (friction or resistance) in the system. \\(F_d\\) is the amplitude of the external forcing, representing the maximum strength of the periodic external force applied to the system. \\(\\omega_d\\) is the driving frequency. which is the frequency of the external periodic force driving the system. For small angles, we approximate \\(\\sin(\\theta) \\approx \\theta\\) , simplifying the equation to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma\\frac{d\\theta}{dt} + \\theta = F_d\\cos(\\omega_d t) \\] This equation resembles the standard damped driven oscillator.","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#approximate-solutions","text":"The general solution for small-angle oscillations can be expressed as: \\[ \\theta(t) = A e^{-\\gamma t} \\cos(\\omega t + \\phi) + \\theta_{p}(t) \\] where \\(\\theta_{p}(t)\\) is the particular solution due to external forcing. The amplitude and phase of the response depend on resonance conditions.","title":"Approximate Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions","text":"Resonance occurs when the driving frequency \\(\\omega_d\\) is close to the system's natural frequency: \\[ \\omega_0 = \\sqrt{1 - \\gamma^2} \\]","title":"Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#example-in-python-script","text":"At resonance, the amplitude of oscillations peaks, which can be critical in engineering applications such as bridges and buildings. For example, the Tacoma Narrows Bridge collapse was a consequence of wind-induced resonance.","title":"Example In python script"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#energy-considerations","text":"The total energy of the system is affected by damping and external forcing. The balance between energy input and dissipation determines whether oscillations persist, decay, or become chaotic.","title":"Energy Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#analysis-of-dynamics","text":"","title":"Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#influence-of-system-parameters","text":"The behavior of the forced damped pendulum depends on the parameters \\(\\gamma\\) , \\(F_d\\) , and \\(\\omega_d\\) : Damping Coefficient ( \\(\\gamma\\) ): High damping reduces oscillations and accelerates settling. Low damping prolongs oscillations and can lead to chaotic behavior. Driving Amplitude ( \\(F_d\\) ): Small \\(F_d\\) results in nearly harmonic motion. Large \\(F_d\\) may induce chaos. Driving Frequency ( \\(\\omega_d\\) ): Near resonance ( \\(\\omega_d \\approx \\omega_0\\) ), the amplitude is maximized. Off-resonance driving leads to steady oscillations at lower amplitudes.","title":"Influence of System Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#transition-from-regular-to-chaotic-motion","text":"The system undergoes a transition through different dynamic regimes: Regular Motion: At low forcing, motion is periodic and predictable. Quasiperiodic Motion: Increased forcing introduces complex but non-chaotic patterns. Chaotic Motion: High \\(F_d\\) leads to chaotic behavior with extreme sensitivity to initial conditions.","title":"Transition from Regular to Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#chaos-analysis","text":"The transition to chaos is analyzed using: Poincar\\'e Sections to identify periodic and chaotic attractors. Bifurcation Diagrams showing transitions between periodicity and chaos. Lyapunov Exponents quantifying sensitivity to initial conditions. These analyses help understand chaotic behavior in physical systems like climate models, mechanical oscillators, and biological rhythms.","title":"Chaos Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#step-1-define-the-forced-damped-pendulum-equation","text":"\ud83d\udc49 Click here to view the simulation \ud83d\udc48 The equation of motion for a forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + \\frac{b}{m} \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = F \\cos(\\omega_d t) \\] Where: \\(\\theta\\) : Angular displacement. \\(b\\) : Damping coefficient. \\(m\\) : Mass of the pendulum bob. \\(g\\) : Acceleration due to gravity. \\(L\\) : Length of the pendulum. \\(F\\) : Amplitude of the driving force. \\(\\omega_d\\) : Angular frequency of the driving force. This can be rewritten as a system of first-order differential equations: \\[ \\frac{d\\theta}{dt} = \\omega \\] \\[ \\frac{d\\omega}{dt} = -\\frac{b}{m} \\omega - \\frac{g}{L} \\sin(\\theta) + F \\cos(\\omega_d t) \\]","title":"Step 1: Define the Forced Damped Pendulum Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#step-2-implement-the-model-in-python","text":"Below is the Python code to simulate the system:","title":"Step 2: Implement the Model in Python"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-phase-diagram-plots-the-angular-velocity-omega-against-the-angular-displacement-theta","text":"","title":"A phase diagram plots the angular velocity \\(\\omega\\) against the angular displacement \\(\\theta\\)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#step-4-plot-poincare-sections","text":"","title":"Step 4: Plot Poincar\u00e9 Sections"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-poincare-section-is-a-way-to-visualize-chaotic-behavior-we-sample-the-system-at-a-fixed-phase-of-the-driving-force-eg-every-2piomega_d","text":"","title":"A Poincar\u00e9 section is a way to visualize chaotic behavior. We sample the system at a fixed phase of the driving force (e.g., every \\(2\\pi/\\omega_d\\))"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Gravity: Orbital Period and Orbital Radius Motivation The relationship between the square of the orbital period and the cube of the orbital radius, known as Kepler's Third Law , is a fundamental principle in celestial mechanics. This law provides a mathematical connection between the motion of celestial bodies and the gravitational forces governing them. It has far-reaching implications, from understanding the dynamics of planetary systems to designing satellite orbits. By exploring this relationship, we can uncover insights into gravitational interactions and apply them to real-world scenarios, such as the orbits of planets in our Solar System or the motion of artificial satellites. Task Breakdown Derive the relationship between the square of the orbital period and the cube of the orbital radius for circular orbits. Discuss the implications of this relationship in astronomy, including its role in calculating planetary masses and distances. Analyze real-world examples , such as the Moon's orbit around Earth and the orbits of planets in the Solar System. Implement a computational model to simulate circular orbits and verify the relationship. Deliverables : A detailed explanation of the concepts. A Python script or notebook implementing the simulations. Graphical representations of circular orbits and the relationship between orbital period and radius. A discussion on how this relationship extends to elliptical orbits and other celestial bodies. 1. Derivation of Kepler's Third Law for Circular Orbits Setup Consider a body (e.g., a planet or satellite) of mass \\(m\\) in a circular orbit around a central body (e.g., a star or planet) of mass \\(M\\) , where \\(M \\gg m\\) . The radius of the orbit is \\(r\\) , and the orbital period is \\(T\\) , the time it takes to complete one full revolution. Step 1: Gravitational Force as the Centripetal Force For a circular orbit, the gravitational force between the two bodies provides the centripetal force required to keep the smaller body in its orbit. The gravitational force is given by Newton's law of gravitation: \\[ F_g = \\frac{G M m}{r^2} \\] where \\(G\\) is the gravitational constant ( \\(G \\approx 6.674 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ). The centripetal force required for circular motion is: \\[ F_c = \\frac{m v^2}{r} \\] where \\(v\\) is the orbital velocity of the smaller body. Equating the two forces: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] The \\(m\\) terms cancel out (since \\(m \\neq 0\\) ), and we simplify: \\[ \\frac{G M}{r^2} = \\frac{v^2}{r} \\] Multiply both sides by \\(r\\) : \\[ \\frac{G M}{r} = v^2 \\] \\[ v = \\sqrt{\\frac{G M}{r}} \\] Step 2: Relate Orbital Velocity to the Period The orbital velocity \\(v\\) can also be expressed in terms of the circumference of the orbit and the period \\(T\\) . The circumference of the circular orbit is \\(2 \\pi r\\) , and the body completes one orbit in time \\(T\\) , so: \\[ v = \\frac{\\text{distance}}{\\text{time}} = \\frac{2 \\pi r}{T} \\] Substitute this expression for \\(v\\) into the equation from Step 1: \\[ \\frac{2 \\pi r}{T} = \\sqrt{\\frac{G M}{r}} \\] Square both sides to eliminate the square root: \\[ \\left( \\frac{2 \\pi r}{T} \\right)^2 = \\frac{G M}{r} \\] \\[ \\frac{4 \\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiply both sides by \\(T^2\\) and divide by \\(r\\) : \\[ 4 \\pi^2 r^2 = \\frac{G M}{r} T^2 \\] Multiply both sides by \\(r\\) : \\[ 4 \\pi^2 r^3 = G M T^2 \\] Rearrange to isolate \\(T^2\\) : \\[ T^2 = \\frac{4 \\pi^2}{G M} r^3 \\] This is Kepler's Third Law for circular orbits: the square of the orbital period \\(T^2\\) is proportional to the cube of the orbital radius \\(r^3\\) . The constant of proportionality is \\(\\frac{4 \\pi^2}{G M}\\) , which depends on the mass of the central body \\(M\\) . 2. Implications of Kepler's Third Law in Astronomy Calculating Planetary Masses Kepler's Third Law allows us to determine the mass of a central body if we know the orbital period and radius of a body orbiting it. Rearrange the equation: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] For example, by observing the orbit of a moon around a planet (e.g., the Moon around Earth), we can measure \\(r\\) and \\(T\\) and calculate \\(M\\) , the mass of the planet. This method is widely used to estimate the masses of planets, stars, and even black holes (by observing the orbits of stars or gas clouds around them). Determining Orbital Distances If the mass of the central body is known (e.g., the Sun's mass), Kepler's Third Law can be used to calculate the orbital radius of a planet or satellite given its period, or vice versa. This is crucial for mapping planetary systems and predicting the positions of celestial bodies. Understanding Orbital Dynamics The law reveals that planets farther from the Sun have longer orbital periods, which is why Jupiter (at about 5.2 AU from the Sun) takes much longer to orbit than Earth (at 1 AU). This relationship also helps in designing satellite orbits, ensuring they have the correct period for their intended altitude. 3. Real-World Examples The Moon's Orbit Around Earth Orbital radius : The average distance from Earth to the Moon is \\(r \\approx 384,400 \\, \\text{km} = 3.844 \\times 10^8 \\, \\text{m}\\) . Orbital period : The Moon's orbital period (sidereal month) is \\(T \\approx 27.32 \\, \\text{days} = 27.32 \\times 24 \\times 60 \\times 60 = 2.36 \\times 10^6 \\, \\text{s}\\) . Mass of Earth : \\(M \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) . Using Kepler's Third Law: \\[ T^2 = \\frac{4 \\pi^2}{G M} r^3 \\] \\[ (2.36 \\times 10^6)^2 = \\frac{4 \\pi^2}{(6.674 \\times 10^{-11}) (5.972 \\times 10^{24})} (3.844 \\times 10^8)^3 \\] \\[ 5.57 \\times 10^{12} \\approx 9.91 \\times 10^{-14} \\times 5.68 \\times 10^{25} \\] \\[ 5.57 \\times 10^{12} \\approx 5.63 \\times 10^{12} \\] The values are very close, confirming that the Moon's orbit obeys Kepler's Third Law. Small discrepancies are due to the Moon's slightly elliptical orbit and perturbations from other bodies. Planets in the Solar System For planets orbiting the Sun, we can compare their periods and radii. The Sun's mass is \\(M \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) . For Earth: \\(r = 1 \\, \\text{AU} = 1.496 \\times 10^{11} \\, \\text{m}\\) \\(T = 1 \\, \\text{year} = 3.156 \\times 10^7 \\, \\text{s}\\) \\[ T^2 = (3.156 \\times 10^7)^2 = 9.96 \\times 10^{14} \\] \\[ r^3 = (1.496 \\times 10^{11})^3 = 3.347 \\times 10^{33} \\] \\[ \\frac{T^2}{r^3} = \\frac{9.96 \\times 10^{14}}{3.347 \\times 10^{33}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3} \\] This ratio should be constant for all planets orbiting the Sun, as \\(\\frac{T^2}{r^3} = \\frac{4 \\pi^2}{G M}\\) . For Jupiter ( \\(r \\approx 5.2 \\, \\text{AU}\\) , \\(T \\approx 11.86 \\, \\text{years}\\) ), the ratio is nearly the same, confirming the law's universality. 4. Computational Model to Simulate Circular Orbits Python Script Below is a Python script that simulates a circular orbit, calculates the orbital period, and verifies Kepler's Third Law by plotting \\(T^2\\) versus \\(r^3\\) for different orbital radii.","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#gravity-orbital-period-and-orbital-radius","text":"","title":"Gravity: Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation","text":"The relationship between the square of the orbital period and the cube of the orbital radius, known as Kepler's Third Law , is a fundamental principle in celestial mechanics. This law provides a mathematical connection between the motion of celestial bodies and the gravitational forces governing them. It has far-reaching implications, from understanding the dynamics of planetary systems to designing satellite orbits. By exploring this relationship, we can uncover insights into gravitational interactions and apply them to real-world scenarios, such as the orbits of planets in our Solar System or the motion of artificial satellites.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task-breakdown","text":"Derive the relationship between the square of the orbital period and the cube of the orbital radius for circular orbits. Discuss the implications of this relationship in astronomy, including its role in calculating planetary masses and distances. Analyze real-world examples , such as the Moon's orbit around Earth and the orbits of planets in the Solar System. Implement a computational model to simulate circular orbits and verify the relationship. Deliverables : A detailed explanation of the concepts. A Python script or notebook implementing the simulations. Graphical representations of circular orbits and the relationship between orbital period and radius. A discussion on how this relationship extends to elliptical orbits and other celestial bodies.","title":"Task Breakdown"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-derivation-of-keplers-third-law-for-circular-orbits","text":"","title":"1. Derivation of Kepler's Third Law for Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#setup","text":"Consider a body (e.g., a planet or satellite) of mass \\(m\\) in a circular orbit around a central body (e.g., a star or planet) of mass \\(M\\) , where \\(M \\gg m\\) . The radius of the orbit is \\(r\\) , and the orbital period is \\(T\\) , the time it takes to complete one full revolution.","title":"Setup"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-1-gravitational-force-as-the-centripetal-force","text":"For a circular orbit, the gravitational force between the two bodies provides the centripetal force required to keep the smaller body in its orbit. The gravitational force is given by Newton's law of gravitation: \\[ F_g = \\frac{G M m}{r^2} \\] where \\(G\\) is the gravitational constant ( \\(G \\approx 6.674 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ). The centripetal force required for circular motion is: \\[ F_c = \\frac{m v^2}{r} \\] where \\(v\\) is the orbital velocity of the smaller body. Equating the two forces: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] The \\(m\\) terms cancel out (since \\(m \\neq 0\\) ), and we simplify: \\[ \\frac{G M}{r^2} = \\frac{v^2}{r} \\] Multiply both sides by \\(r\\) : \\[ \\frac{G M}{r} = v^2 \\] \\[ v = \\sqrt{\\frac{G M}{r}} \\]","title":"Step 1: Gravitational Force as the Centripetal Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-2-relate-orbital-velocity-to-the-period","text":"The orbital velocity \\(v\\) can also be expressed in terms of the circumference of the orbit and the period \\(T\\) . The circumference of the circular orbit is \\(2 \\pi r\\) , and the body completes one orbit in time \\(T\\) , so: \\[ v = \\frac{\\text{distance}}{\\text{time}} = \\frac{2 \\pi r}{T} \\] Substitute this expression for \\(v\\) into the equation from Step 1: \\[ \\frac{2 \\pi r}{T} = \\sqrt{\\frac{G M}{r}} \\] Square both sides to eliminate the square root: \\[ \\left( \\frac{2 \\pi r}{T} \\right)^2 = \\frac{G M}{r} \\] \\[ \\frac{4 \\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiply both sides by \\(T^2\\) and divide by \\(r\\) : \\[ 4 \\pi^2 r^2 = \\frac{G M}{r} T^2 \\] Multiply both sides by \\(r\\) : \\[ 4 \\pi^2 r^3 = G M T^2 \\] Rearrange to isolate \\(T^2\\) : \\[ T^2 = \\frac{4 \\pi^2}{G M} r^3 \\] This is Kepler's Third Law for circular orbits: the square of the orbital period \\(T^2\\) is proportional to the cube of the orbital radius \\(r^3\\) . The constant of proportionality is \\(\\frac{4 \\pi^2}{G M}\\) , which depends on the mass of the central body \\(M\\) .","title":"Step 2: Relate Orbital Velocity to the Period"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-implications-of-keplers-third-law-in-astronomy","text":"","title":"2. Implications of Kepler's Third Law in Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#calculating-planetary-masses","text":"Kepler's Third Law allows us to determine the mass of a central body if we know the orbital period and radius of a body orbiting it. Rearrange the equation: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] For example, by observing the orbit of a moon around a planet (e.g., the Moon around Earth), we can measure \\(r\\) and \\(T\\) and calculate \\(M\\) , the mass of the planet. This method is widely used to estimate the masses of planets, stars, and even black holes (by observing the orbits of stars or gas clouds around them).","title":"Calculating Planetary Masses"},{"location":"1%20Physics/2%20Gravity/Problem_1/#determining-orbital-distances","text":"If the mass of the central body is known (e.g., the Sun's mass), Kepler's Third Law can be used to calculate the orbital radius of a planet or satellite given its period, or vice versa. This is crucial for mapping planetary systems and predicting the positions of celestial bodies.","title":"Determining Orbital Distances"},{"location":"1%20Physics/2%20Gravity/Problem_1/#understanding-orbital-dynamics","text":"The law reveals that planets farther from the Sun have longer orbital periods, which is why Jupiter (at about 5.2 AU from the Sun) takes much longer to orbit than Earth (at 1 AU). This relationship also helps in designing satellite orbits, ensuring they have the correct period for their intended altitude.","title":"Understanding Orbital Dynamics"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-real-world-examples","text":"","title":"3. Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#the-moons-orbit-around-earth","text":"Orbital radius : The average distance from Earth to the Moon is \\(r \\approx 384,400 \\, \\text{km} = 3.844 \\times 10^8 \\, \\text{m}\\) . Orbital period : The Moon's orbital period (sidereal month) is \\(T \\approx 27.32 \\, \\text{days} = 27.32 \\times 24 \\times 60 \\times 60 = 2.36 \\times 10^6 \\, \\text{s}\\) . Mass of Earth : \\(M \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) . Using Kepler's Third Law: \\[ T^2 = \\frac{4 \\pi^2}{G M} r^3 \\] \\[ (2.36 \\times 10^6)^2 = \\frac{4 \\pi^2}{(6.674 \\times 10^{-11}) (5.972 \\times 10^{24})} (3.844 \\times 10^8)^3 \\] \\[ 5.57 \\times 10^{12} \\approx 9.91 \\times 10^{-14} \\times 5.68 \\times 10^{25} \\] \\[ 5.57 \\times 10^{12} \\approx 5.63 \\times 10^{12} \\] The values are very close, confirming that the Moon's orbit obeys Kepler's Third Law. Small discrepancies are due to the Moon's slightly elliptical orbit and perturbations from other bodies.","title":"The Moon's Orbit Around Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#planets-in-the-solar-system","text":"For planets orbiting the Sun, we can compare their periods and radii. The Sun's mass is \\(M \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) . For Earth: \\(r = 1 \\, \\text{AU} = 1.496 \\times 10^{11} \\, \\text{m}\\) \\(T = 1 \\, \\text{year} = 3.156 \\times 10^7 \\, \\text{s}\\) \\[ T^2 = (3.156 \\times 10^7)^2 = 9.96 \\times 10^{14} \\] \\[ r^3 = (1.496 \\times 10^{11})^3 = 3.347 \\times 10^{33} \\] \\[ \\frac{T^2}{r^3} = \\frac{9.96 \\times 10^{14}}{3.347 \\times 10^{33}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3} \\] This ratio should be constant for all planets orbiting the Sun, as \\(\\frac{T^2}{r^3} = \\frac{4 \\pi^2}{G M}\\) . For Jupiter ( \\(r \\approx 5.2 \\, \\text{AU}\\) , \\(T \\approx 11.86 \\, \\text{years}\\) ), the ratio is nearly the same, confirming the law's universality.","title":"Planets in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-computational-model-to-simulate-circular-orbits","text":"","title":"4. Computational Model to Simulate Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#python-script","text":"Below is a Python script that simulates a circular orbit, calculates the orbital period, and verifies Kepler's Third Law by plotting \\(T^2\\) versus \\(r^3\\) for different orbital radii.","title":"Python Script"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Escape Velocities and Cosmic Velocities Introduction The concept of escape velocity is crucial for understanding the conditions required to leave a celestial body's gravitational influence. Extending this concept, the first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system. These principles underpin modern space exploration, from launching satellites to interplanetary missions. This document defines the first, second, and third cosmic velocities, explains their physical meaning, derives their equations, calculates them for Earth, Mars, and Jupiter, and includes a Python script to visualize these velocities. Definitions and Physical Meaning First Cosmic Velocity (Orbital Velocity) The first cosmic velocity ( \\(v_1\\) ) is the minimum speed required for an object to enter a circular orbit around a celestial body at its surface. Physical Meaning : At \\(v_1\\) , an object orbits without falling back or escaping. For Earth, this is the speed of low Earth orbit (LEO) satellites. Second Cosmic Velocity (Escape Velocity) The second cosmic velocity ( \\(v_2\\) ) is the speed required to escape a celestial body\u2019s gravitational influence from its surface. Physical Meaning : At \\(v_2\\) , kinetic energy equals gravitational potential energy, allowing escape to infinity. It\u2019s the threshold for leaving a planet. Third Cosmic Velocity The third cosmic velocity ( \\(v_3\\) ) is the speed required to escape the gravitational pull of a star (e.g., the Sun) from a planet\u2019s surface. Physical Meaning : This enables interstellar travel, overcoming both planetary and stellar gravity. Voyager 1 is a space probe launched by NASA on September 5, 1977 , as part of the Voyager program . It was designed to explore the outer planets and is now the farthest human-made object from Earth , traveling into interstellar space . Speed & Distance Current Speed: ~ 17 km/s (~3.6 AU per year). Current Distance: Over 24 billion km (160+ AU) from Earth. Signal Delay: It takes over 22 hours for a signal from Voyager 1 to reach Earth. Mathematical Derivations First Cosmic Velocity ( \\(v_1\\) ) Gravitational force equals centripetal force for a circular orbit: $$ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} $$ Where: \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) (gravitational constant), \\(M\\) = mass of the body, \\(m\\) = mass of the object (cancels out), \\(r\\) = radius of the body. Simplifying: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$ Second Cosmic Velocity ( \\(v_2\\) ) From energy conservation (kinetic + potential = 0 at infinity): \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] This describes the condition where the object has just enough energy to escape the gravitational pull and reach infinity with zero kinetic energy left \u2014 this is the definition of escape velocity. Simplifying: \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} \\] Note: \\(v_2 = \\sqrt{2} \\cdot v_1\\) . Third Cosmic Velocity ( \\(v_3\\) ) Escaping a star system involves escaping the planet and the star. Sun\u2019s escape velocity from Earth\u2019s orbit: $$ v_{\\text{esc,Sun}} = \\sqrt{\\frac{2 G M_{\\text{Sun}}}{R}} $$ Where \\(M_{\\text{Sun}}\\) is the Sun\u2019s mass and \\(R\\) is Earth\u2019s orbital radius (~1 AU). Approximate \\(v_3\\) : $$ v_3 \\approx \\sqrt{v_2^2 + v_{\\text{esc,Sun}}^2} $$ Exact values depend on launch conditions. Parameters Affecting Velocities Mass ( \\(M\\) ) : Higher mass increases velocities. Radius ( \\(r\\) ) : Larger radius decreases velocities for a given mass. Distance from Star ( \\(R\\) ) : Affects \\(v_3\\) via stellar gravity. Calculations for Celestial Bodies Data: Earth : \\(M = 5.972 \\times 10^{24} \\, \\text{kg}\\) , \\(r = 6,371 \\, \\text{km}\\) , Mars : \\(M = 6.417 \\times 10^{23} \\, \\text{kg}\\) , \\(r = 3,390 \\, \\text{km}\\) , Jupiter : \\(M = 1.898 \\times 10^{27} \\, \\text{kg}\\) , \\(r = 69,911 \\, \\text{km}\\) , Sun : \\(M_{\\text{Sun}} = 1.989 \\times 10^{30} \\, \\text{kg}\\) , \\(R_{\\text{Earth}} = 1.496 \\times 10^8 \\, \\text{km}\\) . Python Script Earth : \\[ v1 (Orbital) = 7.91 km/s \\] \\[ v2 (Escape) = 11.19 km/s \\] \\[ v3 (Solar Escape) = 43.59 km/s \\] Mars : $$ v1 (Orbital) = 3.55 km/s $$ \\[ v2 (Escape) = 5.03 km/s \\] Jupiter : \\[ v1 (Orbital) = 42.57 km/s \\] \\[ v2 (Escape) = 60.20 km/s \\] The Python script from the main document generates a bar chart comparing \\(v_1\\) and \\(v_2\\) for Earth, Mars, and Jupiter, with \\(v_3\\) as a dashed line for Earth. Importance in Space Exploration Launching Satellites First Cosmic Velocity : Satellites in LEO (e.g., ~ \\(7.8 \\, \\text{km/s}\\) for Earth) use \\(v_1\\) , adjusted for drag and altitude. Missions to Other Planets Second Cosmic Velocity : Interplanetary missions require \\(v_2\\) (e.g., \\(5.03 \\, \\text{km/s}\\) for Mars escape). Interstellar Travel Third Cosmic Velocity : Escaping the solar system needs \\(v_3\\) (e.g., \\(16.6 \\, \\text{km/s}\\) from Earth), often aided by gravitational assists.","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#escape-velocities-and-cosmic-velocities","text":"","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#introduction","text":"The concept of escape velocity is crucial for understanding the conditions required to leave a celestial body's gravitational influence. Extending this concept, the first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system. These principles underpin modern space exploration, from launching satellites to interplanetary missions. This document defines the first, second, and third cosmic velocities, explains their physical meaning, derives their equations, calculates them for Earth, Mars, and Jupiter, and includes a Python script to visualize these velocities.","title":"Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_2/#definitions-and-physical-meaning","text":"","title":"Definitions and Physical Meaning"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-orbital-velocity","text":"The first cosmic velocity ( \\(v_1\\) ) is the minimum speed required for an object to enter a circular orbit around a celestial body at its surface. Physical Meaning : At \\(v_1\\) , an object orbits without falling back or escaping. For Earth, this is the speed of low Earth orbit (LEO) satellites.","title":"First Cosmic Velocity (Orbital Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-escape-velocity","text":"The second cosmic velocity ( \\(v_2\\) ) is the speed required to escape a celestial body\u2019s gravitational influence from its surface. Physical Meaning : At \\(v_2\\) , kinetic energy equals gravitational potential energy, allowing escape to infinity. It\u2019s the threshold for leaving a planet.","title":"Second Cosmic Velocity (Escape Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity","text":"The third cosmic velocity ( \\(v_3\\) ) is the speed required to escape the gravitational pull of a star (e.g., the Sun) from a planet\u2019s surface. Physical Meaning : This enables interstellar travel, overcoming both planetary and stellar gravity. Voyager 1 is a space probe launched by NASA on September 5, 1977 , as part of the Voyager program . It was designed to explore the outer planets and is now the farthest human-made object from Earth , traveling into interstellar space .","title":"Third Cosmic Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#speed-distance","text":"Current Speed: ~ 17 km/s (~3.6 AU per year). Current Distance: Over 24 billion km (160+ AU) from Earth. Signal Delay: It takes over 22 hours for a signal from Voyager 1 to reach Earth.","title":"Speed &amp; Distance"},{"location":"1%20Physics/2%20Gravity/Problem_2/#mathematical-derivations","text":"","title":"Mathematical Derivations"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-v_1","text":"Gravitational force equals centripetal force for a circular orbit: $$ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} $$ Where: \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) (gravitational constant), \\(M\\) = mass of the body, \\(m\\) = mass of the object (cancels out), \\(r\\) = radius of the body. Simplifying: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$","title":"First Cosmic Velocity (\\(v_1\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-v_2","text":"From energy conservation (kinetic + potential = 0 at infinity): \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] This describes the condition where the object has just enough energy to escape the gravitational pull and reach infinity with zero kinetic energy left \u2014 this is the definition of escape velocity. Simplifying: \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} \\] Note: \\(v_2 = \\sqrt{2} \\cdot v_1\\) .","title":"Second Cosmic Velocity (\\(v_2\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity-v_3","text":"Escaping a star system involves escaping the planet and the star. Sun\u2019s escape velocity from Earth\u2019s orbit: $$ v_{\\text{esc,Sun}} = \\sqrt{\\frac{2 G M_{\\text{Sun}}}{R}} $$ Where \\(M_{\\text{Sun}}\\) is the Sun\u2019s mass and \\(R\\) is Earth\u2019s orbital radius (~1 AU). Approximate \\(v_3\\) : $$ v_3 \\approx \\sqrt{v_2^2 + v_{\\text{esc,Sun}}^2} $$ Exact values depend on launch conditions.","title":"Third Cosmic Velocity (\\(v_3\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#parameters-affecting-velocities","text":"Mass ( \\(M\\) ) : Higher mass increases velocities. Radius ( \\(r\\) ) : Larger radius decreases velocities for a given mass. Distance from Star ( \\(R\\) ) : Affects \\(v_3\\) via stellar gravity.","title":"Parameters Affecting Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#calculations-for-celestial-bodies","text":"Data: Earth : \\(M = 5.972 \\times 10^{24} \\, \\text{kg}\\) , \\(r = 6,371 \\, \\text{km}\\) , Mars : \\(M = 6.417 \\times 10^{23} \\, \\text{kg}\\) , \\(r = 3,390 \\, \\text{km}\\) , Jupiter : \\(M = 1.898 \\times 10^{27} \\, \\text{kg}\\) , \\(r = 69,911 \\, \\text{km}\\) , Sun : \\(M_{\\text{Sun}} = 1.989 \\times 10^{30} \\, \\text{kg}\\) , \\(R_{\\text{Earth}} = 1.496 \\times 10^8 \\, \\text{km}\\) .","title":"Calculations for Celestial Bodies"},{"location":"1%20Physics/2%20Gravity/Problem_2/#python-script","text":"Earth : \\[ v1 (Orbital) = 7.91 km/s \\] \\[ v2 (Escape) = 11.19 km/s \\] \\[ v3 (Solar Escape) = 43.59 km/s \\] Mars : $$ v1 (Orbital) = 3.55 km/s $$ \\[ v2 (Escape) = 5.03 km/s \\] Jupiter : \\[ v1 (Orbital) = 42.57 km/s \\] \\[ v2 (Escape) = 60.20 km/s \\] The Python script from the main document generates a bar chart comparing \\(v_1\\) and \\(v_2\\) for Earth, Mars, and Jupiter, with \\(v_3\\) as a dashed line for Earth.","title":"Python Script"},{"location":"1%20Physics/2%20Gravity/Problem_2/#importance-in-space-exploration","text":"","title":"Importance in Space Exploration"},{"location":"1%20Physics/2%20Gravity/Problem_2/#launching-satellites","text":"First Cosmic Velocity : Satellites in LEO (e.g., ~ \\(7.8 \\, \\text{km/s}\\) for Earth) use \\(v_1\\) , adjusted for drag and altitude.","title":"Launching Satellites"},{"location":"1%20Physics/2%20Gravity/Problem_2/#missions-to-other-planets","text":"Second Cosmic Velocity : Interplanetary missions require \\(v_2\\) (e.g., \\(5.03 \\, \\text{km/s}\\) for Mars escape).","title":"Missions to Other Planets"},{"location":"1%20Physics/2%20Gravity/Problem_2/#interstellar-travel","text":"Third Cosmic Velocity : Escaping the solar system needs \\(v_3\\) (e.g., \\(16.6 \\, \\text{km/s}\\) from Earth), often aided by gravitational assists.","title":"Interstellar Travel"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Trajectories of a Freely Released Payload Near Earth Introduction When an object is released from a moving rocket near Earth, its trajectory depends on initial conditions (position, velocity, altitude) and gravitational forces. This problem integrates orbital mechanics and numerical methods, offering insights critical for space missions like payload deployment or reentry. This document analyzes possible trajectories (parabolic, hyperbolic, elliptical) of a payload released near Earth, performs a numerical simulation of its path, and develops a Python tool to visualize the motion under Earth's gravity. It leverages Newton's Law of Gravitation and Kepler's Laws for derivations. Definitions and Physical Meaning Trajectory Types Elliptical : Closed orbit; payload remains bound to Earth (e.g., satellite orbits). Ellipse (closed) | \\(< 11.2\\ \\text{km/s}\\) Parabolic : Boundary case; payload escapes with zero residual velocity at infinity. Parabola | \\(= 11.2\\ \\text{km/s}\\) Hyperbolic : Open trajectory; payload escapes with excess velocity. Hyperbola | \\(> 11.2\\ \\text{km/s}\\) Physical Meaning : The trajectory depends on the payload\u2019s specific energy, determined by initial velocity and position relative to Earth\u2019s gravitational potential. Mathematical Derivations Newton\u2019s Law of Gravitation Gravitational force between Earth and payload: $$ F = \\frac{G M m}{r^2} $$ Where: \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) (gravitational constant), \\(M = 5.972 \\times 10^{24} \\, \\text{kg}\\) (Earth\u2019s mass), \\(m\\) = payload mass, \\(r\\) = distance from Earth\u2019s center. Acceleration: $$ \\ddot{\\mathbf{r}} = -\\frac{G M}{r^3} \\mathbf{r} $$ Specific Energy and Trajectory Type Total specific energy ( \\(\\epsilon\\) ) determines the trajectory: \\[ \\epsilon = \\frac{v^2}{2} - \\frac{G M}{r} \\] \\(\\epsilon < 0\\) : Elliptical (bound orbit), \\(\\epsilon = 0\\) : Parabolic (escape velocity), \\(\\epsilon > 0\\) : Hyperbolic (excess velocity). Escape Velocity Minimum speed to escape Earth: $$ v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r}} $$ Orbital Elements (Simplified) Semi-major axis ( \\(a\\) ) for elliptical orbits: $$ a = -\\frac{G M}{2 \\epsilon} \\quad (\\epsilon < 0) $$ This formula tells us that: The more negative the specific energy ( \\(\\epsilon\\) ), the smaller the orbit. Since \\(\\epsilon < 0\\) for bound (elliptical) orbits, the negative sign in the denominator ensures that \\(a > 0\\) . Parameters Affecting Trajectories Initial Velocity ( \\(v_0\\) ) : Magnitude and direction relative to Earth. Initial Position ( \\(r_0\\) ) : Altitude above Earth\u2019s surface. Earth\u2019s Mass ( \\(M\\) ) : Fixed gravitational influence. Altitude : Affects gravitational strength ( \\(r = R_{\\text{Earth}} + h\\) ). Calculations and Simulation Initial Conditions Earth radius: \\(R_{\\text{Earth}} = 6,371 \\, \\text{km}\\) , Altitude: \\(h = 400 \\, \\text{km}\\) (e.g., LEO), Initial position: \\(r_0 = 6,771 \\, \\text{km}\\) , Velocities: \\(v_0 = 7.5 \\, \\text{km/s}\\) (elliptical), \\(11.2 \\, \\text{km/s}\\) (parabolic), \\(12.0 \\, \\text{km/s}\\) (hyperbolic), Direction: Tangential to Earth\u2019s surface. Python Script click for simulation Results and Importance of Payload Trajectories Near Earth Results of Trajectory Simulations Calculated Trajectories Elliptical ( \\(v_0 = 7.5 \\, \\text{km/s}\\) ) : Bound orbit, payload circles Earth. Specific energy: \\(\\epsilon < 0\\) . Parabolic ( \\(v_0 = 11.2 \\, \\text{km/s}\\) ) : Escape trajectory, zero velocity at infinity. Specific energy: \\(\\epsilon = 0\\) . Hyperbolic ( \\(v_0 = 12.0 \\, \\text{km/s}\\) ) : Excess velocity escape, open path. Specific energy: \\(\\epsilon > 0\\) . The Python script generates a plot showing: Elliptical: Closed loop around Earth. Parabolic: Boundary escape path. Hyperbolic: Diverging trajectory. Initial conditions: Released at \\(400 \\, \\text{km}\\) altitude ( \\(r_0 = 6,771 \\, \\text{km}\\) ), tangential velocity. Importance in Space Exploration Orbital Insertion Elliptical Trajectories : Payloads with \\(v_0 < v_{\\text{esc}}\\) (e.g., \\(7.5 \\, \\text{km/s}\\) at \\(400 \\, \\text{km}\\) ) enter stable orbits, critical for satellite deployment. $$ v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r_0}} \\approx 11.2 \\, \\text{km/s} $$ Reentry Scenarios Sub-Elliptical Velocities : If \\(v_0\\) is insufficient for orbit, the payload follows a ballistic path, intersecting Earth (reentry). Escape Scenarios Parabolic and Hyperbolic Trajectories : Velocities at or above \\(v_{\\text{esc}}\\) (e.g., \\(11.2 \\, \\text{km/s}\\) or \\(12.0 \\, \\text{km/s}\\) ) enable escape, relevant for interplanetary missions. Parabolic: Minimal energy escape. Hyperbolic: Excess energy for faster departure.","title":"Trajectories of a Freely Released Payload Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_3/#trajectories-of-a-freely-released-payload-near-earth","text":"","title":"Trajectories of a Freely Released Payload Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_3/#introduction","text":"When an object is released from a moving rocket near Earth, its trajectory depends on initial conditions (position, velocity, altitude) and gravitational forces. This problem integrates orbital mechanics and numerical methods, offering insights critical for space missions like payload deployment or reentry. This document analyzes possible trajectories (parabolic, hyperbolic, elliptical) of a payload released near Earth, performs a numerical simulation of its path, and develops a Python tool to visualize the motion under Earth's gravity. It leverages Newton's Law of Gravitation and Kepler's Laws for derivations.","title":"Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_3/#definitions-and-physical-meaning","text":"","title":"Definitions and Physical Meaning"},{"location":"1%20Physics/2%20Gravity/Problem_3/#trajectory-types","text":"Elliptical : Closed orbit; payload remains bound to Earth (e.g., satellite orbits). Ellipse (closed) | \\(< 11.2\\ \\text{km/s}\\) Parabolic : Boundary case; payload escapes with zero residual velocity at infinity. Parabola | \\(= 11.2\\ \\text{km/s}\\) Hyperbolic : Open trajectory; payload escapes with excess velocity. Hyperbola | \\(> 11.2\\ \\text{km/s}\\) Physical Meaning : The trajectory depends on the payload\u2019s specific energy, determined by initial velocity and position relative to Earth\u2019s gravitational potential.","title":"Trajectory Types"},{"location":"1%20Physics/2%20Gravity/Problem_3/#mathematical-derivations","text":"","title":"Mathematical Derivations"},{"location":"1%20Physics/2%20Gravity/Problem_3/#newtons-law-of-gravitation","text":"Gravitational force between Earth and payload: $$ F = \\frac{G M m}{r^2} $$ Where: \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) (gravitational constant), \\(M = 5.972 \\times 10^{24} \\, \\text{kg}\\) (Earth\u2019s mass), \\(m\\) = payload mass, \\(r\\) = distance from Earth\u2019s center. Acceleration: $$ \\ddot{\\mathbf{r}} = -\\frac{G M}{r^3} \\mathbf{r} $$","title":"Newton\u2019s Law of Gravitation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#specific-energy-and-trajectory-type","text":"Total specific energy ( \\(\\epsilon\\) ) determines the trajectory: \\[ \\epsilon = \\frac{v^2}{2} - \\frac{G M}{r} \\] \\(\\epsilon < 0\\) : Elliptical (bound orbit), \\(\\epsilon = 0\\) : Parabolic (escape velocity), \\(\\epsilon > 0\\) : Hyperbolic (excess velocity).","title":"Specific Energy and Trajectory Type"},{"location":"1%20Physics/2%20Gravity/Problem_3/#escape-velocity","text":"Minimum speed to escape Earth: $$ v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r}} $$","title":"Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_3/#orbital-elements-simplified","text":"Semi-major axis ( \\(a\\) ) for elliptical orbits: $$ a = -\\frac{G M}{2 \\epsilon} \\quad (\\epsilon < 0) $$ This formula tells us that: The more negative the specific energy ( \\(\\epsilon\\) ), the smaller the orbit. Since \\(\\epsilon < 0\\) for bound (elliptical) orbits, the negative sign in the denominator ensures that \\(a > 0\\) .","title":"Orbital Elements (Simplified)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#parameters-affecting-trajectories","text":"Initial Velocity ( \\(v_0\\) ) : Magnitude and direction relative to Earth. Initial Position ( \\(r_0\\) ) : Altitude above Earth\u2019s surface. Earth\u2019s Mass ( \\(M\\) ) : Fixed gravitational influence. Altitude : Affects gravitational strength ( \\(r = R_{\\text{Earth}} + h\\) ).","title":"Parameters Affecting Trajectories"},{"location":"1%20Physics/2%20Gravity/Problem_3/#calculations-and-simulation","text":"","title":"Calculations and Simulation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#initial-conditions","text":"Earth radius: \\(R_{\\text{Earth}} = 6,371 \\, \\text{km}\\) , Altitude: \\(h = 400 \\, \\text{km}\\) (e.g., LEO), Initial position: \\(r_0 = 6,771 \\, \\text{km}\\) , Velocities: \\(v_0 = 7.5 \\, \\text{km/s}\\) (elliptical), \\(11.2 \\, \\text{km/s}\\) (parabolic), \\(12.0 \\, \\text{km/s}\\) (hyperbolic), Direction: Tangential to Earth\u2019s surface.","title":"Initial Conditions"},{"location":"1%20Physics/2%20Gravity/Problem_3/#python-script","text":"","title":"Python Script"},{"location":"1%20Physics/2%20Gravity/Problem_3/#_1","text":"click for simulation","title":""},{"location":"1%20Physics/2%20Gravity/Problem_3/#_2","text":"","title":""},{"location":"1%20Physics/2%20Gravity/Problem_3/#results-and-importance-of-payload-trajectories-near-earth","text":"","title":"Results and Importance of Payload Trajectories Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_3/#results-of-trajectory-simulations","text":"","title":"Results of Trajectory Simulations"},{"location":"1%20Physics/2%20Gravity/Problem_3/#calculated-trajectories","text":"Elliptical ( \\(v_0 = 7.5 \\, \\text{km/s}\\) ) : Bound orbit, payload circles Earth. Specific energy: \\(\\epsilon < 0\\) . Parabolic ( \\(v_0 = 11.2 \\, \\text{km/s}\\) ) : Escape trajectory, zero velocity at infinity. Specific energy: \\(\\epsilon = 0\\) . Hyperbolic ( \\(v_0 = 12.0 \\, \\text{km/s}\\) ) : Excess velocity escape, open path. Specific energy: \\(\\epsilon > 0\\) . The Python script generates a plot showing: Elliptical: Closed loop around Earth. Parabolic: Boundary escape path. Hyperbolic: Diverging trajectory. Initial conditions: Released at \\(400 \\, \\text{km}\\) altitude ( \\(r_0 = 6,771 \\, \\text{km}\\) ), tangential velocity.","title":"Calculated Trajectories"},{"location":"1%20Physics/2%20Gravity/Problem_3/#importance-in-space-exploration","text":"","title":"Importance in Space Exploration"},{"location":"1%20Physics/2%20Gravity/Problem_3/#orbital-insertion","text":"Elliptical Trajectories : Payloads with \\(v_0 < v_{\\text{esc}}\\) (e.g., \\(7.5 \\, \\text{km/s}\\) at \\(400 \\, \\text{km}\\) ) enter stable orbits, critical for satellite deployment. $$ v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r_0}} \\approx 11.2 \\, \\text{km/s} $$","title":"Orbital Insertion"},{"location":"1%20Physics/2%20Gravity/Problem_3/#reentry-scenarios","text":"Sub-Elliptical Velocities : If \\(v_0\\) is insufficient for orbit, the payload follows a ballistic path, intersecting Earth (reentry).","title":"Reentry Scenarios"},{"location":"1%20Physics/2%20Gravity/Problem_3/#escape-scenarios","text":"Parabolic and Hyperbolic Trajectories : Velocities at or above \\(v_{\\text{esc}}\\) (e.g., \\(11.2 \\, \\text{km/s}\\) or \\(12.0 \\, \\text{km/s}\\) ) enable escape, relevant for interplanetary missions. Parabolic: Minimal energy escape. Hyperbolic: Excess energy for faster departure.","title":"Escape Scenarios"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1 Interference Patterns on a Water Surface Motivation Interference occurs when waves from different sources overlap, creating new patterns. On a water surface, this can be easily observed when ripples from different points meet, forming distinctive interference patterns. These patterns can show us how waves combine in different ways, either reinforcing each other or canceling out. Studying these patterns helps us understand wave behavior in a simple, visual way. It also allows us to explore important concepts, like the relationship between wave phase and the effects of multiple sources. This task offers a hands-on approach to learning about wave interactions and their real-world applications, making it an interesting and engaging way to dive into wave physics. Task A circular wave on the water surface, emanating from a point source located at \\((x_0, y_0)\\) , can be described by the Single Disturbance equation: \\[ \\eta(x, y, t) = \\frac{A}{\\sqrt{r}} \\cdot \\cos(kr - \\omega t + \\phi) \\] where: \\(\\eta(x, y, t)\\) is the displacement of the water surface at point \\((x, y)\\) and time \\(t\\) , \\(A\\) is the amplitude of the wave, \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number, related to the wavelength \\(\\lambda\\) , \\(\\omega = 2\\pi f\\) is the angular frequency, related to the frequency \\(f\\) , \\(r = \\sqrt{(x - x_0)^2 + (y - y_0)^2}\\) is the distance from the source to the point \\((x, y)\\) , \\(\\phi\\) is the initial phase. Problem Statement The task is to analyze the interference patterns formed on the water surface due to the superposition of waves emitted from point sources placed at the vertices of a chosen regular polygon. Steps to Follow Select a Regular Polygon : Choose a regular polygon (e.g., equilateral triangle, square, regular pentagon). Position the Sources : Place point wave sources at the vertices of the selected polygon. Wave Equations : Write the equations describing the waves emitted from each source, considering their respective positions. Superposition of Waves : Apply the principle of superposition by summing the wave displacements at each point on the water surface: $$ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t) $$ where \\(N\\) is the number of sources (vertices of the polygon). 5. Analyze Interference Patterns : Examine the resulting displacement \\(\\eta_{\\text{sum}}(x, y, t)\\) as a function of position \\((x, y)\\) and time \\(t\\) . Identify regions of constructive interference (wave amplification) and destructive interference (wave cancellation). 6. Visualization : Present the findings graphically, illustrating the interference patterns for the chosen regular polygon. Considerations Assume all sources emit waves with the same amplitude \\(A\\) , wavelength \\(\\lambda\\) , and frequency \\(f\\) . The waves are coherent, maintaining a constant phase difference. Simulation and visualization tools such as Python (with libraries like Matplotlib) or other graphical software may be used to aid in the analysis. Deliverables A Markdown document with a Python script or notebook implementing the simulations. A detailed explanation of the interference patterns observed for the chosen regular polygon with the goal of understanding wave superposition. Graphical representations of the water surface showing constructive and destructive interference regions. Solution Step 1: Select a Regular Polygon Let\u2019s choose a square as the regular polygon for this analysis. A square has 4 vertices, so we will place 4 point sources at its vertices. For simplicity, assume the square is centered at the origin \\((0, 0)\\) with a side length of \\(2a\\) . The vertices of the square are: Vertex 1: \\((a, a)\\) Vertex 2: \\((a, -a)\\) Vertex 3: \\((-a, -a)\\) Vertex 4: \\((-a, a)\\) Let\u2019s set \\(a = 1\\) (arbitrary units) for simplicity, so the vertices are at: \\((1, 1)\\) \\((1, -1)\\) \\((-1, -1)\\) \\((-1, 1)\\) Step 2: Position the Sources The wave sources are placed at the vertices of the square, as listed above. Step 3: Wave Equations Each source emits a circular wave described by the given equation: \\[ \\eta_i(x, y, t) = \\frac{A}{\\sqrt{r_i}} \\cdot \\cos(k r_i - \\omega t + \\phi) \\] where \\(r_i = \\sqrt{(x - x_{0i})^2 + (y - y_{0i})^2}\\) is the distance from the \\(i\\) -th source to the point \\((x, y)\\) . For each source: Source 1 at \\((1, 1)\\) : \\(r_1 = \\sqrt{(x - 1)^2 + (y - 1)^2}\\) Source 2 at \\((1, -1)\\) : \\(r_2 = \\sqrt{(x - 1)^2 + (y + 1)^2}\\) Source 3 at \\((-1, -1)\\) : \\(r_3 = \\sqrt{(x + 1)^2 + (y + 1)^2}\\) Source 4 at \\((-1, 1)\\) : \\(r_4 = \\sqrt{(x + 1)^2 + (y - 1)^2}\\) Assume the following parameters for simplicity: Amplitude \\(A = 1\\) Wavelength \\(\\lambda = 1\\) , so wave number \\(k = \\frac{2\\pi}{\\lambda} = 2\\pi\\) Frequency \\(f = 1\\) , so angular frequency \\(\\omega = 2\\pi f = 2\\pi\\) Initial phase \\(\\phi = 0\\) (all sources are in phase, i.e., coherent) Thus, the wave equation for each source becomes: \\[ \\eta_i(x, y, t) = \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i - 2\\pi t) \\] Step 4: Superposition of Waves The total displacement at point \\((x, y)\\) and time \\(t\\) is the sum of the displacements from all 4 sources: \\[ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{4} \\eta_i(x, y, t) \\] Substituting the wave equations: \\[ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{4} \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i - 2\\pi t) \\] where \\(r_i\\) is the distance from each source to the point \\((x, y)\\) , as defined above. Step 5: Analyze Interference Patterns To analyze the interference patterns, we need to evaluate \\(\\eta_{\\text{sum}}(x, y, t)\\) over a grid of points \\((x, y)\\) at a specific time \\(t\\) . Let\u2019s fix \\(t = 0\\) for simplicity to observe the spatial interference pattern: \\[ \\eta_{\\text{sum}}(x, y, 0) = \\sum_{i=1}^{4} \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i) \\] Constructive Interference : Occurs when the waves are in phase, i.e., when the phase difference \\(2\\pi (r_i - r_j)\\) between any two sources \\(i\\) and \\(j\\) is an integer multiple of \\(2\\pi\\) . This happens when the path difference \\(r_i - r_j\\) is an integer multiple of the wavelength \\(\\lambda = 1\\) , so \\(r_i - r_j = m\\) (where \\(m\\) is an integer). Destructive Interference : Occurs when the waves are out of phase by \\(\\pi\\) radians, i.e., when the path difference \\(r_i - r_j = (m + \\frac{1}{2})\\lambda = m + 0.5\\) . Example Points: At the origin \\((0, 0)\\) : \\(r_1 = \\sqrt{(0-1)^2 + (0-1)^2} = \\sqrt{2}\\) \\(r_2 = \\sqrt{(0-1)^2 + (0+1)^2} = \\sqrt{2}\\) \\(r_3 = \\sqrt{(0+1)^2 + (0+1)^2} = \\sqrt{2}\\) \\(r_4 = \\sqrt{(0+1)^2 + (0-1)^2} = \\sqrt{2}\\) All distances are equal, \\(r_i = \\sqrt{2}\\) . The displacement is: $$ \\eta_{\\text{sum}}(0, 0, 0) = 4 \\cdot \\frac{1}{\\sqrt{\\sqrt{2}}} \\cdot \\cos(2\\pi \\sqrt{2}) \\approx 4 \\cdot \\frac{1}{1.414} \\cdot \\cos(2\\pi \\cdot 1.414) \\approx 2.828 \\cdot \\cos(2.828\\pi) $$ Since \\(2.828\\pi \\approx 8.886\\) radians, \\(\\cos(8.886) \\approx \\cos(2\\pi \\cdot 1.414) \\approx -0.999\\) , so: $$ \\eta_{\\text{sum}}(0, 0, 0) \\approx 2.828 \\cdot (-0.999) \\approx -2.825 $$ This indicates a large negative displacement, suggesting constructive interference (in the negative direction due to the phase). At \\((1, 0)\\) (midpoint of a side): \\(r_1 = \\sqrt{(1-1)^2 + (0-1)^2} = 1\\) \\(r_2 = \\sqrt{(1-1)^2 + (0+1)^2} = 1\\) \\(r_3 = \\sqrt{(1+1)^2 + (0+1)^2} = \\sqrt{5}\\) \\(r_4 = \\sqrt{(1+1)^2 + (0-1)^2} = \\sqrt{5}\\) The displacement is: $$ \\eta_{\\text{sum}}(1, 0, 0) = \\frac{1}{\\sqrt{1}} \\cdot \\cos(2\\pi \\cdot 1) + \\frac{1}{\\sqrt{1}} \\cdot \\cos(2\\pi \\cdot 1) + \\frac{1}{\\sqrt{\\sqrt{5}}} \\cdot \\cos(2\\pi \\sqrt{5}) + \\frac{1}{\\sqrt{\\sqrt{5}}} \\cdot \\cos(2\\pi \\sqrt{5}) $$ \\(\\cos(2\\pi \\cdot 1) = 1\\) \\(\\cos(2\\pi \\sqrt{5}) \\approx \\cos(2\\pi \\cdot 2.236) \\approx \\cos(4.472\\pi) \\approx 1\\) So: $$ \\eta_{\\text{sum}}(1, 0, 0) \\approx 1 \\cdot 1 + 1 \\cdot 1 + \\frac{1}{\\sqrt{2.236}} \\cdot 1 + \\frac{1}{\\sqrt{2.236}} \\cdot 1 \\approx 1 + 1 + 0.669 + 0.669 \\approx 3.338 $$ This indicates strong constructive interference. Step 6: Visualization (Python Script Outline) Below is a Python script outline using Matplotlib to simulate and visualize the interference pattern. This script computes \\(\\eta_{\\text{sum}}(x, y, t)\\) over a grid and plots the result as a heatmap. 3 Sources For a triangle with side length \\(s\\) , the distance from the center to each vertex (radius \\(r\\) ) is \\(r = \\frac{s}{\\sqrt{3}}\\) . For simplicity, we choose \\(r = 2\\) units. The angles for the vertices of a regular \\(N\\) -gon are given by: \\( \\(\\theta_i = \\frac{2\\pi (i-1)}{N}, \\quad i = 1, 2, \\ldots, N\\) \\) For \\(N = 3\\) : \\(\\theta_1 = 0\\) \\(\\theta_2 = \\frac{2\\pi}{3} = 120^\\circ\\) \\(\\theta_3 = \\frac{4\\pi}{3} = 240^\\circ\\) The coordinates of the sources are: Source 1: \\((x_1, y_1) = (r \\cos \\theta_1, r \\sin \\theta_1) = (2 \\cos 0, 2 \\sin 0) = (2, 0)\\) Source 2: \\((x_2, y_2) = (r \\cos \\theta_2, r \\sin \\theta_2) = (2 \\cos 120^\\circ, 2 \\sin 120^\\circ) = (-1, \\sqrt{3})\\) Source 3: \\((x_3, y_3) = (r \\cos \\theta_3, r \\sin \\theta_3) = (2 \\cos 240^\\circ, 2 \\sin 240^\\circ) = (-1, -\\sqrt{3})\\) Step 3: Wave Equations Each source emits a wave of the form: \\( \\(\\eta_i(x, y, t) = A \\cos(kr_i - \\omega t + \\phi_i)\\) \\) where: \\(r_i = \\sqrt{(x - x_i)^2 + (y - y_i)^2}\\) is the distance from source \\(i\\) at \\((x_i, y_i)\\) to point \\((x, y)\\) . \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number. \\(\\omega = 2\\pi f\\) is the angular frequency. \\(\\phi_i\\) is the phase of source \\(i\\) . Since the waves are coherent with a constant phase difference, we assume \\(\\phi_i = 0\\) (all sources in phase). We choose the following parameters for visualization: Amplitude: \\(A = 1\\) Wavelength: \\(\\lambda = 3\\) (arbitrary, chosen for clear interference patterns) Frequency: \\(f = 1\\) (arbitrary, sets oscillation speed) Thus: \\(k = \\frac{2\\pi}{\\lambda} = \\frac{2\\pi}{3}\\) \\(\\omega = 2\\pi f = 2\\pi\\) The wave from each source is: \\( \\(\\eta_i(x, y, t) = A \\cos\\left( \\frac{2\\pi}{\\lambda} r_i - \\omega t \\right)\\) \\) Step 4: Superposition of Waves The total displacement at point \\((x, y)\\) at time \\(t\\) is the sum of the waves from all sources: \\( \\(\\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t)\\) \\) For \\(N = 3\\) : \\( \\(\\eta_{\\text{sum}}(x, y, t) = A \\sum_{i=1}^{3} \\cos\\left( \\frac{2\\pi}{\\lambda} r_i - \\omega t \\right)\\) \\) Step 5: Analyze Interference Patterns Constructive Interference: Occurs where the waves are in phase, i.e., the phase difference \\(\\frac{2\\pi}{\\lambda} (r_i - r_j)\\) is an integer multiple of \\(2\\pi\\) . This happens when the path difference \\(|r_i - r_j| = m\\lambda\\) (for integer \\(m\\) ). At these points, the amplitude can reach up to \\(3A\\) . Destructive Interference: Occurs where the waves are out of phase, i.e., the phase difference is an odd multiple of \\(\\pi\\) , so the path difference \\(|r_i - r_j| = (m + \\frac{1}{2})\\lambda\\) . At these points, the amplitude is near zero. Example at the Center: At \\((x, y) = (0, 0)\\) , the distance to each source is \\(r_i = 2\\) , so the phase term for each wave is identical at a given time, leading to constructive interference when \\(\\cos(-\\omega t)\\) is maximized. 5 Sources Steps Followed 1. Select a Regular Polygon We choose a regular pentagon with 5 vertices as our source configuration. 2. Position the Sources Sources are placed at the vertices of a pentagon of radius \\(r = 4\\) . The coordinates are: \\( \\((x_i, y_i) = (r \\cos \\theta_i, r \\sin \\theta_i), \\quad \\theta_i = \\frac{2\\pi i}{5}, \\quad i = 0, 1, ..., 4\\) \\) 3. Wave Equations Each source emits a wave of amplitude \\(A\\) , wave number \\(k = \\frac{2\\pi}{\\lambda}\\) , and angular frequency \\(\\omega = 2\\pi f\\) . The wave from source \\(i\\) at point \\((x, y)\\) and time \\(t\\) is: \\( \\(\\eta_i(x, y, t) = A \\cos(k R_i - \\omega t)\\) \\) where \\(R_i = \\sqrt{(x - x_i)^2 + (y - y_i)^2}\\) 4. Superposition of Waves By the superposition principle, the total wave displacement is: \\( \\(\\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^5 \\eta_i(x, y, t)\\) \\) Explanation of Interference Patterns Symmetry : Due to the square\u2019s symmetry, the interference pattern is symmetric about the x-axis, y-axis, and diagonals. The origin \\((0, 0)\\) shows significant displacement because all sources are equidistant, leading to constructive or destructive interference depending on the phase \\(2\\pi \\sqrt{2}\\) . Constructive Interference : Occurs along lines where the path differences are integer multiples of \\(\\lambda\\) . For example, at \\((1, 0)\\) , the waves from sources at \\((1, 1)\\) and \\((1, -1)\\) are in phase (path difference = 0), leading to amplification. Destructive Interference : Occurs where path differences are \\((m + 0.5)\\lambda\\) . For instance, points where the distance from one pair of sources differs by \\(0.5\\lambda\\) from another pair will show cancellation. Pattern Characteristics : The pattern consists of concentric circles around each source, overlapping to form a complex grid of peaks and troughs. The heatmap would show red and blue regions indicating positive and negative displacements, respectively. Conclusion The interference pattern for a square arrangement of sources shows a rich structure with regions of constructive and destructive interference. The symmetry of the square leads to a highly organized pattern, with maximum amplification at points equidistant from pairs of sources and cancellation where path differences align with half-wavelengths. The Python script provided can be used to visualize this pattern, helping to identify these regions graphically.","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#interference-patterns-on-a-water-surface","text":"","title":"Interference Patterns on a Water Surface"},{"location":"1%20Physics/3%20Waves/Problem_1/#motivation","text":"Interference occurs when waves from different sources overlap, creating new patterns. On a water surface, this can be easily observed when ripples from different points meet, forming distinctive interference patterns. These patterns can show us how waves combine in different ways, either reinforcing each other or canceling out. Studying these patterns helps us understand wave behavior in a simple, visual way. It also allows us to explore important concepts, like the relationship between wave phase and the effects of multiple sources. This task offers a hands-on approach to learning about wave interactions and their real-world applications, making it an interesting and engaging way to dive into wave physics.","title":"Motivation"},{"location":"1%20Physics/3%20Waves/Problem_1/#task","text":"A circular wave on the water surface, emanating from a point source located at \\((x_0, y_0)\\) , can be described by the Single Disturbance equation: \\[ \\eta(x, y, t) = \\frac{A}{\\sqrt{r}} \\cdot \\cos(kr - \\omega t + \\phi) \\] where: \\(\\eta(x, y, t)\\) is the displacement of the water surface at point \\((x, y)\\) and time \\(t\\) , \\(A\\) is the amplitude of the wave, \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number, related to the wavelength \\(\\lambda\\) , \\(\\omega = 2\\pi f\\) is the angular frequency, related to the frequency \\(f\\) , \\(r = \\sqrt{(x - x_0)^2 + (y - y_0)^2}\\) is the distance from the source to the point \\((x, y)\\) , \\(\\phi\\) is the initial phase.","title":"Task"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-statement","text":"The task is to analyze the interference patterns formed on the water surface due to the superposition of waves emitted from point sources placed at the vertices of a chosen regular polygon.","title":"Problem Statement"},{"location":"1%20Physics/3%20Waves/Problem_1/#steps-to-follow","text":"Select a Regular Polygon : Choose a regular polygon (e.g., equilateral triangle, square, regular pentagon). Position the Sources : Place point wave sources at the vertices of the selected polygon. Wave Equations : Write the equations describing the waves emitted from each source, considering their respective positions. Superposition of Waves : Apply the principle of superposition by summing the wave displacements at each point on the water surface: $$ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t) $$ where \\(N\\) is the number of sources (vertices of the polygon). 5. Analyze Interference Patterns : Examine the resulting displacement \\(\\eta_{\\text{sum}}(x, y, t)\\) as a function of position \\((x, y)\\) and time \\(t\\) . Identify regions of constructive interference (wave amplification) and destructive interference (wave cancellation). 6. Visualization : Present the findings graphically, illustrating the interference patterns for the chosen regular polygon.","title":"Steps to Follow"},{"location":"1%20Physics/3%20Waves/Problem_1/#considerations","text":"Assume all sources emit waves with the same amplitude \\(A\\) , wavelength \\(\\lambda\\) , and frequency \\(f\\) . The waves are coherent, maintaining a constant phase difference. Simulation and visualization tools such as Python (with libraries like Matplotlib) or other graphical software may be used to aid in the analysis.","title":"Considerations"},{"location":"1%20Physics/3%20Waves/Problem_1/#deliverables","text":"A Markdown document with a Python script or notebook implementing the simulations. A detailed explanation of the interference patterns observed for the chosen regular polygon with the goal of understanding wave superposition. Graphical representations of the water surface showing constructive and destructive interference regions.","title":"Deliverables"},{"location":"1%20Physics/3%20Waves/Problem_1/#solution","text":"","title":"Solution"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-1-select-a-regular-polygon","text":"Let\u2019s choose a square as the regular polygon for this analysis. A square has 4 vertices, so we will place 4 point sources at its vertices. For simplicity, assume the square is centered at the origin \\((0, 0)\\) with a side length of \\(2a\\) . The vertices of the square are: Vertex 1: \\((a, a)\\) Vertex 2: \\((a, -a)\\) Vertex 3: \\((-a, -a)\\) Vertex 4: \\((-a, a)\\) Let\u2019s set \\(a = 1\\) (arbitrary units) for simplicity, so the vertices are at: \\((1, 1)\\) \\((1, -1)\\) \\((-1, -1)\\) \\((-1, 1)\\)","title":"Step 1: Select a Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-2-position-the-sources","text":"The wave sources are placed at the vertices of the square, as listed above.","title":"Step 2: Position the Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-3-wave-equations","text":"Each source emits a circular wave described by the given equation: \\[ \\eta_i(x, y, t) = \\frac{A}{\\sqrt{r_i}} \\cdot \\cos(k r_i - \\omega t + \\phi) \\] where \\(r_i = \\sqrt{(x - x_{0i})^2 + (y - y_{0i})^2}\\) is the distance from the \\(i\\) -th source to the point \\((x, y)\\) . For each source: Source 1 at \\((1, 1)\\) : \\(r_1 = \\sqrt{(x - 1)^2 + (y - 1)^2}\\) Source 2 at \\((1, -1)\\) : \\(r_2 = \\sqrt{(x - 1)^2 + (y + 1)^2}\\) Source 3 at \\((-1, -1)\\) : \\(r_3 = \\sqrt{(x + 1)^2 + (y + 1)^2}\\) Source 4 at \\((-1, 1)\\) : \\(r_4 = \\sqrt{(x + 1)^2 + (y - 1)^2}\\) Assume the following parameters for simplicity: Amplitude \\(A = 1\\) Wavelength \\(\\lambda = 1\\) , so wave number \\(k = \\frac{2\\pi}{\\lambda} = 2\\pi\\) Frequency \\(f = 1\\) , so angular frequency \\(\\omega = 2\\pi f = 2\\pi\\) Initial phase \\(\\phi = 0\\) (all sources are in phase, i.e., coherent) Thus, the wave equation for each source becomes: \\[ \\eta_i(x, y, t) = \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i - 2\\pi t) \\]","title":"Step 3: Wave Equations"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-4-superposition-of-waves","text":"The total displacement at point \\((x, y)\\) and time \\(t\\) is the sum of the displacements from all 4 sources: \\[ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{4} \\eta_i(x, y, t) \\] Substituting the wave equations: \\[ \\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{4} \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i - 2\\pi t) \\] where \\(r_i\\) is the distance from each source to the point \\((x, y)\\) , as defined above.","title":"Step 4: Superposition of Waves"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-5-analyze-interference-patterns","text":"To analyze the interference patterns, we need to evaluate \\(\\eta_{\\text{sum}}(x, y, t)\\) over a grid of points \\((x, y)\\) at a specific time \\(t\\) . Let\u2019s fix \\(t = 0\\) for simplicity to observe the spatial interference pattern: \\[ \\eta_{\\text{sum}}(x, y, 0) = \\sum_{i=1}^{4} \\frac{1}{\\sqrt{r_i}} \\cdot \\cos(2\\pi r_i) \\] Constructive Interference : Occurs when the waves are in phase, i.e., when the phase difference \\(2\\pi (r_i - r_j)\\) between any two sources \\(i\\) and \\(j\\) is an integer multiple of \\(2\\pi\\) . This happens when the path difference \\(r_i - r_j\\) is an integer multiple of the wavelength \\(\\lambda = 1\\) , so \\(r_i - r_j = m\\) (where \\(m\\) is an integer). Destructive Interference : Occurs when the waves are out of phase by \\(\\pi\\) radians, i.e., when the path difference \\(r_i - r_j = (m + \\frac{1}{2})\\lambda = m + 0.5\\) .","title":"Step 5: Analyze Interference Patterns"},{"location":"1%20Physics/3%20Waves/Problem_1/#example-points","text":"At the origin \\((0, 0)\\) : \\(r_1 = \\sqrt{(0-1)^2 + (0-1)^2} = \\sqrt{2}\\) \\(r_2 = \\sqrt{(0-1)^2 + (0+1)^2} = \\sqrt{2}\\) \\(r_3 = \\sqrt{(0+1)^2 + (0+1)^2} = \\sqrt{2}\\) \\(r_4 = \\sqrt{(0+1)^2 + (0-1)^2} = \\sqrt{2}\\) All distances are equal, \\(r_i = \\sqrt{2}\\) . The displacement is: $$ \\eta_{\\text{sum}}(0, 0, 0) = 4 \\cdot \\frac{1}{\\sqrt{\\sqrt{2}}} \\cdot \\cos(2\\pi \\sqrt{2}) \\approx 4 \\cdot \\frac{1}{1.414} \\cdot \\cos(2\\pi \\cdot 1.414) \\approx 2.828 \\cdot \\cos(2.828\\pi) $$ Since \\(2.828\\pi \\approx 8.886\\) radians, \\(\\cos(8.886) \\approx \\cos(2\\pi \\cdot 1.414) \\approx -0.999\\) , so: $$ \\eta_{\\text{sum}}(0, 0, 0) \\approx 2.828 \\cdot (-0.999) \\approx -2.825 $$ This indicates a large negative displacement, suggesting constructive interference (in the negative direction due to the phase). At \\((1, 0)\\) (midpoint of a side): \\(r_1 = \\sqrt{(1-1)^2 + (0-1)^2} = 1\\) \\(r_2 = \\sqrt{(1-1)^2 + (0+1)^2} = 1\\) \\(r_3 = \\sqrt{(1+1)^2 + (0+1)^2} = \\sqrt{5}\\) \\(r_4 = \\sqrt{(1+1)^2 + (0-1)^2} = \\sqrt{5}\\) The displacement is: $$ \\eta_{\\text{sum}}(1, 0, 0) = \\frac{1}{\\sqrt{1}} \\cdot \\cos(2\\pi \\cdot 1) + \\frac{1}{\\sqrt{1}} \\cdot \\cos(2\\pi \\cdot 1) + \\frac{1}{\\sqrt{\\sqrt{5}}} \\cdot \\cos(2\\pi \\sqrt{5}) + \\frac{1}{\\sqrt{\\sqrt{5}}} \\cdot \\cos(2\\pi \\sqrt{5}) $$ \\(\\cos(2\\pi \\cdot 1) = 1\\) \\(\\cos(2\\pi \\sqrt{5}) \\approx \\cos(2\\pi \\cdot 2.236) \\approx \\cos(4.472\\pi) \\approx 1\\) So: $$ \\eta_{\\text{sum}}(1, 0, 0) \\approx 1 \\cdot 1 + 1 \\cdot 1 + \\frac{1}{\\sqrt{2.236}} \\cdot 1 + \\frac{1}{\\sqrt{2.236}} \\cdot 1 \\approx 1 + 1 + 0.669 + 0.669 \\approx 3.338 $$ This indicates strong constructive interference.","title":"Example Points:"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-6-visualization-python-script-outline","text":"Below is a Python script outline using Matplotlib to simulate and visualize the interference pattern. This script computes \\(\\eta_{\\text{sum}}(x, y, t)\\) over a grid and plots the result as a heatmap.","title":"Step 6: Visualization (Python Script Outline)"},{"location":"1%20Physics/3%20Waves/Problem_1/#3-sources","text":"For a triangle with side length \\(s\\) , the distance from the center to each vertex (radius \\(r\\) ) is \\(r = \\frac{s}{\\sqrt{3}}\\) . For simplicity, we choose \\(r = 2\\) units. The angles for the vertices of a regular \\(N\\) -gon are given by: \\( \\(\\theta_i = \\frac{2\\pi (i-1)}{N}, \\quad i = 1, 2, \\ldots, N\\) \\) For \\(N = 3\\) : \\(\\theta_1 = 0\\) \\(\\theta_2 = \\frac{2\\pi}{3} = 120^\\circ\\) \\(\\theta_3 = \\frac{4\\pi}{3} = 240^\\circ\\) The coordinates of the sources are: Source 1: \\((x_1, y_1) = (r \\cos \\theta_1, r \\sin \\theta_1) = (2 \\cos 0, 2 \\sin 0) = (2, 0)\\) Source 2: \\((x_2, y_2) = (r \\cos \\theta_2, r \\sin \\theta_2) = (2 \\cos 120^\\circ, 2 \\sin 120^\\circ) = (-1, \\sqrt{3})\\) Source 3: \\((x_3, y_3) = (r \\cos \\theta_3, r \\sin \\theta_3) = (2 \\cos 240^\\circ, 2 \\sin 240^\\circ) = (-1, -\\sqrt{3})\\) Step 3: Wave Equations Each source emits a wave of the form: \\( \\(\\eta_i(x, y, t) = A \\cos(kr_i - \\omega t + \\phi_i)\\) \\) where: \\(r_i = \\sqrt{(x - x_i)^2 + (y - y_i)^2}\\) is the distance from source \\(i\\) at \\((x_i, y_i)\\) to point \\((x, y)\\) . \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number. \\(\\omega = 2\\pi f\\) is the angular frequency. \\(\\phi_i\\) is the phase of source \\(i\\) . Since the waves are coherent with a constant phase difference, we assume \\(\\phi_i = 0\\) (all sources in phase). We choose the following parameters for visualization: Amplitude: \\(A = 1\\) Wavelength: \\(\\lambda = 3\\) (arbitrary, chosen for clear interference patterns) Frequency: \\(f = 1\\) (arbitrary, sets oscillation speed) Thus: \\(k = \\frac{2\\pi}{\\lambda} = \\frac{2\\pi}{3}\\) \\(\\omega = 2\\pi f = 2\\pi\\) The wave from each source is: \\( \\(\\eta_i(x, y, t) = A \\cos\\left( \\frac{2\\pi}{\\lambda} r_i - \\omega t \\right)\\) \\) Step 4: Superposition of Waves The total displacement at point \\((x, y)\\) at time \\(t\\) is the sum of the waves from all sources: \\( \\(\\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t)\\) \\) For \\(N = 3\\) : \\( \\(\\eta_{\\text{sum}}(x, y, t) = A \\sum_{i=1}^{3} \\cos\\left( \\frac{2\\pi}{\\lambda} r_i - \\omega t \\right)\\) \\) Step 5: Analyze Interference Patterns Constructive Interference: Occurs where the waves are in phase, i.e., the phase difference \\(\\frac{2\\pi}{\\lambda} (r_i - r_j)\\) is an integer multiple of \\(2\\pi\\) . This happens when the path difference \\(|r_i - r_j| = m\\lambda\\) (for integer \\(m\\) ). At these points, the amplitude can reach up to \\(3A\\) . Destructive Interference: Occurs where the waves are out of phase, i.e., the phase difference is an odd multiple of \\(\\pi\\) , so the path difference \\(|r_i - r_j| = (m + \\frac{1}{2})\\lambda\\) . At these points, the amplitude is near zero. Example at the Center: At \\((x, y) = (0, 0)\\) , the distance to each source is \\(r_i = 2\\) , so the phase term for each wave is identical at a given time, leading to constructive interference when \\(\\cos(-\\omega t)\\) is maximized.","title":"3 Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#5-sources","text":"","title":"5 Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#steps-followed","text":"","title":"Steps Followed"},{"location":"1%20Physics/3%20Waves/Problem_1/#1-select-a-regular-polygon","text":"We choose a regular pentagon with 5 vertices as our source configuration.","title":"1. Select a Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#2-position-the-sources","text":"Sources are placed at the vertices of a pentagon of radius \\(r = 4\\) . The coordinates are: \\( \\((x_i, y_i) = (r \\cos \\theta_i, r \\sin \\theta_i), \\quad \\theta_i = \\frac{2\\pi i}{5}, \\quad i = 0, 1, ..., 4\\) \\)","title":"2. Position the Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#3-wave-equations","text":"Each source emits a wave of amplitude \\(A\\) , wave number \\(k = \\frac{2\\pi}{\\lambda}\\) , and angular frequency \\(\\omega = 2\\pi f\\) . The wave from source \\(i\\) at point \\((x, y)\\) and time \\(t\\) is: \\( \\(\\eta_i(x, y, t) = A \\cos(k R_i - \\omega t)\\) \\) where \\(R_i = \\sqrt{(x - x_i)^2 + (y - y_i)^2}\\)","title":"3. Wave Equations"},{"location":"1%20Physics/3%20Waves/Problem_1/#4-superposition-of-waves","text":"By the superposition principle, the total wave displacement is: \\( \\(\\eta_{\\text{sum}}(x, y, t) = \\sum_{i=1}^5 \\eta_i(x, y, t)\\) \\)","title":"4. Superposition of Waves"},{"location":"1%20Physics/3%20Waves/Problem_1/#explanation-of-interference-patterns","text":"Symmetry : Due to the square\u2019s symmetry, the interference pattern is symmetric about the x-axis, y-axis, and diagonals. The origin \\((0, 0)\\) shows significant displacement because all sources are equidistant, leading to constructive or destructive interference depending on the phase \\(2\\pi \\sqrt{2}\\) . Constructive Interference : Occurs along lines where the path differences are integer multiples of \\(\\lambda\\) . For example, at \\((1, 0)\\) , the waves from sources at \\((1, 1)\\) and \\((1, -1)\\) are in phase (path difference = 0), leading to amplification. Destructive Interference : Occurs where path differences are \\((m + 0.5)\\lambda\\) . For instance, points where the distance from one pair of sources differs by \\(0.5\\lambda\\) from another pair will show cancellation. Pattern Characteristics : The pattern consists of concentric circles around each source, overlapping to form a complex grid of peaks and troughs. The heatmap would show red and blue regions indicating positive and negative displacements, respectively.","title":"Explanation of Interference Patterns"},{"location":"1%20Physics/3%20Waves/Problem_1/#conclusion","text":"The interference pattern for a square arrangement of sources shows a rich structure with regions of constructive and destructive interference. The symmetry of the square leads to a highly organized pattern, with maximum amplification at points equidistant from pairs of sources and cancellation where path differences align with half-wavelengths. The Python script provided can be used to visualize this pattern, helping to identify these regions graphically.","title":"Conclusion"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1 Simulating the Effects of the Lorentz Force Motivation The Lorentz force, expressed as \\(\\mathbf{F} = q(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B})\\) , governs the motion of charged particles in electric and magnetic fields. It is fundamental in fields like plasma physics, particle accelerators, and astrophysics. By focusing on simulations, we can explore the practical applications and visualize the complex trajectories that arise due to this force. Task Overview Theory and Application : Identify systems where the Lorentz force is key and discuss the roles of electric ( \\(\\mathbf{E}\\) ) and magnetic ( \\(\\mathbf{B}\\) ) fields. Simulating Particle Motion : Simulate the trajectory of a charged particle under various field configurations (uniform magnetic field, combined electric and magnetic fields, crossed fields, and non-uniform magnetic field). Parameter Exploration : Vary parameters like field strengths, initial velocity, charge, and mass to observe their effects. Visualization : Create 2D and 3D plots to visualize the particle\u2019s trajectory and highlight phenomena like Larmor radius and drift velocity. Solution 1. Theory and Application Systems Involving the Lorentz Force The Lorentz force plays a critical role in several systems: Particle Accelerators : In cyclotrons, the magnetic field causes charged particles to move in circular paths, while electric fields accelerate them. The Lorentz force ensures particles follow a spiral trajectory as their energy increases. Mass Spectrometers : The Lorentz force separates ions based on their mass-to-charge ratio by deflecting them in a magnetic field. Plasma Confinement : In fusion devices like tokamaks, magnetic fields confine charged particles in a plasma, preventing them from hitting the reactor walls. Role of Electric and Magnetic Fields Electric Field ( \\(\\mathbf{E}\\) ) : Exerts a force \\(\\mathbf{F}_E = q \\mathbf{E}\\) , accelerating the particle in the direction of the field (if \\(q\\) is positive). This force is independent of the particle\u2019s velocity. Magnetic Field ( \\(\\mathbf{B}\\) ) : Exerts a force \\(\\mathbf{F}_B = q (\\mathbf{v} \\times \\mathbf{B})\\) , which is perpendicular to both the velocity \\(\\mathbf{v}\\) and the magnetic field \\(\\mathbf{B}\\) . This force causes circular or helical motion but does no work since it is always perpendicular to the velocity. 2. Simulating Particle Motion We\u2019ll simulate the motion of a charged particle under the Lorentz force using the following equation of motion: \\[ \\mathbf{F} = m \\mathbf{a} = q (\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}) \\] This gives the acceleration: \\[ \\mathbf{a} = \\frac{d\\mathbf{v}}{dt} = \\frac{q}{m} (\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}) \\] We\u2019ll use the Runge-Kutta 4th-order method (RK4) to numerically solve this differential equation, as it provides better accuracy than the Euler method. We\u2019ll simulate the following cases: Uniform Magnetic Field : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = 0\\) . Combined Uniform Electric and Magnetic Fields : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = (E_x, 0, 0)\\) . Crossed Fields : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = (E_x, 0, 0)\\) , with \\(\\mathbf{E} \\perp \\mathbf{B}\\) . Non-Uniform Magnetic Field (Magnetic Bottle) : \\(\\mathbf{B}\\) varies spatially. Python Script for Simulation Below is a Python script that simulates the particle\u2019s motion under the Lorentz force for the above cases. It uses NumPy for calculations and Matplotlib for 2D and 3D visualizations. 3. Parameter Exploration We\u2019ll explore the effects of varying parameters: Field Strengths : Increase \\(B_z\\) to 2 T. A stronger magnetic field reduces the Larmor radius, as \\(R_L = \\frac{m v_\\perp}{q B}\\) , leading to tighter circular motion. Initial Velocity : Double \\(v_0\\) to \\((2 \\times 10^5, 2 \\times 10^5, 0)\\) m/s. This increases the Larmor radius proportionally, as \\(R_L \\propto v_\\perp\\) . Charge and Mass : Use an electron ( \\(q = -1.6 \\times 10^{-19}\\) C, \\(m = 9.11 \\times 10^{-31}\\) kg). The smaller mass and opposite charge result in a smaller Larmor radius and opposite direction of rotation. These variations can be implemented by modifying the constants in the script and re-running the simulation. 4. Visualization The script generates 2D and 3D plots for each case: Uniform Magnetic Field : The particle follows a helical path (circular in the x-y plane) with a Larmor radius of approximately \\(1.04 \\times 10^{-3}\\) m. Combined E and B Fields : The electric field introduces a drift in the x-direction, resulting in a helical path with a drift velocity of \\(1.00 \\times 10^3\\) m/s. Crossed Fields : Similar to the combined case, but the drift is more pronounced due to the perpendicular fields. Magnetic Bottle : The non-uniform field causes the particle to oscillate along the z-axis, demonstrating confinement. Discussion The simulations highlight key phenomena: Larmor Radius : In a uniform magnetic field, the particle\u2019s circular motion has a radius \\(R_L = \\frac{m v_\\perp}{q B}\\) , which matches our calculated value. Drift Velocity : In crossed fields, the \\(\\mathbf{E} \\times \\mathbf{B}\\) drift velocity is \\(v_d = \\frac{E}{B}\\) , consistent with our result. Practical Applications : The helical motion in a magnetic field is seen in cyclotrons, while the drift in crossed fields is used in mass spectrometers. The magnetic bottle simulation demonstrates plasma confinement, as used in fusion research. Conclusion This simulation successfully demonstrates the effects of the Lorentz force on a charged particle under various field configurations. The visualizations reveal circular, helical, and drifting trajectories, aligning with theoretical expectations. By exploring parameter variations, we gain insight into how field strengths, velocity, and particle properties influence motion, providing a deeper understanding of applications like particle accelerators and plasma confinement systems.","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#simulating-the-effects-of-the-lorentz-force","text":"","title":"Simulating the Effects of the Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#motivation","text":"The Lorentz force, expressed as \\(\\mathbf{F} = q(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B})\\) , governs the motion of charged particles in electric and magnetic fields. It is fundamental in fields like plasma physics, particle accelerators, and astrophysics. By focusing on simulations, we can explore the practical applications and visualize the complex trajectories that arise due to this force.","title":"Motivation"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#task-overview","text":"Theory and Application : Identify systems where the Lorentz force is key and discuss the roles of electric ( \\(\\mathbf{E}\\) ) and magnetic ( \\(\\mathbf{B}\\) ) fields. Simulating Particle Motion : Simulate the trajectory of a charged particle under various field configurations (uniform magnetic field, combined electric and magnetic fields, crossed fields, and non-uniform magnetic field). Parameter Exploration : Vary parameters like field strengths, initial velocity, charge, and mass to observe their effects. Visualization : Create 2D and 3D plots to visualize the particle\u2019s trajectory and highlight phenomena like Larmor radius and drift velocity.","title":"Task Overview"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#solution","text":"","title":"Solution"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#1-theory-and-application","text":"","title":"1. Theory and Application"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#systems-involving-the-lorentz-force","text":"The Lorentz force plays a critical role in several systems: Particle Accelerators : In cyclotrons, the magnetic field causes charged particles to move in circular paths, while electric fields accelerate them. The Lorentz force ensures particles follow a spiral trajectory as their energy increases. Mass Spectrometers : The Lorentz force separates ions based on their mass-to-charge ratio by deflecting them in a magnetic field. Plasma Confinement : In fusion devices like tokamaks, magnetic fields confine charged particles in a plasma, preventing them from hitting the reactor walls.","title":"Systems Involving the Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#role-of-electric-and-magnetic-fields","text":"Electric Field ( \\(\\mathbf{E}\\) ) : Exerts a force \\(\\mathbf{F}_E = q \\mathbf{E}\\) , accelerating the particle in the direction of the field (if \\(q\\) is positive). This force is independent of the particle\u2019s velocity. Magnetic Field ( \\(\\mathbf{B}\\) ) : Exerts a force \\(\\mathbf{F}_B = q (\\mathbf{v} \\times \\mathbf{B})\\) , which is perpendicular to both the velocity \\(\\mathbf{v}\\) and the magnetic field \\(\\mathbf{B}\\) . This force causes circular or helical motion but does no work since it is always perpendicular to the velocity.","title":"Role of Electric and Magnetic Fields"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#2-simulating-particle-motion","text":"We\u2019ll simulate the motion of a charged particle under the Lorentz force using the following equation of motion: \\[ \\mathbf{F} = m \\mathbf{a} = q (\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}) \\] This gives the acceleration: \\[ \\mathbf{a} = \\frac{d\\mathbf{v}}{dt} = \\frac{q}{m} (\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}) \\] We\u2019ll use the Runge-Kutta 4th-order method (RK4) to numerically solve this differential equation, as it provides better accuracy than the Euler method. We\u2019ll simulate the following cases: Uniform Magnetic Field : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = 0\\) . Combined Uniform Electric and Magnetic Fields : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = (E_x, 0, 0)\\) . Crossed Fields : \\(\\mathbf{B} = (0, 0, B_z)\\) , \\(\\mathbf{E} = (E_x, 0, 0)\\) , with \\(\\mathbf{E} \\perp \\mathbf{B}\\) . Non-Uniform Magnetic Field (Magnetic Bottle) : \\(\\mathbf{B}\\) varies spatially.","title":"2. Simulating Particle Motion"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#python-script-for-simulation","text":"Below is a Python script that simulates the particle\u2019s motion under the Lorentz force for the above cases. It uses NumPy for calculations and Matplotlib for 2D and 3D visualizations.","title":"Python Script for Simulation"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#3-parameter-exploration","text":"We\u2019ll explore the effects of varying parameters: Field Strengths : Increase \\(B_z\\) to 2 T. A stronger magnetic field reduces the Larmor radius, as \\(R_L = \\frac{m v_\\perp}{q B}\\) , leading to tighter circular motion. Initial Velocity : Double \\(v_0\\) to \\((2 \\times 10^5, 2 \\times 10^5, 0)\\) m/s. This increases the Larmor radius proportionally, as \\(R_L \\propto v_\\perp\\) . Charge and Mass : Use an electron ( \\(q = -1.6 \\times 10^{-19}\\) C, \\(m = 9.11 \\times 10^{-31}\\) kg). The smaller mass and opposite charge result in a smaller Larmor radius and opposite direction of rotation. These variations can be implemented by modifying the constants in the script and re-running the simulation.","title":"3. Parameter Exploration"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#4-visualization","text":"The script generates 2D and 3D plots for each case: Uniform Magnetic Field : The particle follows a helical path (circular in the x-y plane) with a Larmor radius of approximately \\(1.04 \\times 10^{-3}\\) m. Combined E and B Fields : The electric field introduces a drift in the x-direction, resulting in a helical path with a drift velocity of \\(1.00 \\times 10^3\\) m/s. Crossed Fields : Similar to the combined case, but the drift is more pronounced due to the perpendicular fields. Magnetic Bottle : The non-uniform field causes the particle to oscillate along the z-axis, demonstrating confinement.","title":"4. Visualization"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#discussion","text":"The simulations highlight key phenomena: Larmor Radius : In a uniform magnetic field, the particle\u2019s circular motion has a radius \\(R_L = \\frac{m v_\\perp}{q B}\\) , which matches our calculated value. Drift Velocity : In crossed fields, the \\(\\mathbf{E} \\times \\mathbf{B}\\) drift velocity is \\(v_d = \\frac{E}{B}\\) , consistent with our result. Practical Applications : The helical motion in a magnetic field is seen in cyclotrons, while the drift in crossed fields is used in mass spectrometers. The magnetic bottle simulation demonstrates plasma confinement, as used in fusion research.","title":"Discussion"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#conclusion","text":"This simulation successfully demonstrates the effects of the Lorentz force on a charged particle under various field configurations. The visualizations reveal circular, helical, and drifting trajectories, aligning with theoretical expectations. By exploring parameter variations, we gain insight into how field strengths, velocity, and particle properties influence motion, providing a deeper understanding of applications like particle accelerators and plasma confinement systems.","title":"Conclusion"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem_1 Equivalent Resistance Using Graph Theory Objective Implement an algorithm to calculate the equivalent resistance of an electrical circuit modeled as a graph. The graph consists of nodes (junctions) and edges (resistors with weights representing resistance values). Algorithm Overview We model the circuit as an undirected weighted graph: Nodes : Represent electrical junctions. Edges : Represent resistors with weight equal to resistance in ohms (\u03a9). We aim to simplify the graph iteratively using two primary operations: Series Reduction Parallel Reduction Key Concepts Series Combination If two resistors \\( R_1 \\) and \\( R_2 \\) are in series: Total resistance: $$ R_{ext{eq}} = R_1 + R_2 $$ Parallel Combination If two resistors \\( R_1 \\) and \\( R_2 \\) are in parallel: Total resistance: $$ \\frac{1}{R_{\\text{eq}}} = \\frac{1}{R_1} + \\frac{1}{R_2} $$ or $$ R_{\\text{eq}} = \\left( \\frac{1}{R_1} + \\frac{1}{R_2} \\right)^{-1} $$ Pseudocode function calculate_equivalent_resistance(graph, start_node, end_node): while graph is not simplified: apply_series_reduction(graph) apply_parallel_reduction(graph) return graph.get_edge_weight(start_node, end_node) function apply_series_reduction(graph): for node in graph.nodes: if node has exactly two neighbors and not start/end: a, b = neighbors of node if resistors (a-node) and (node-b) are in series: R1 = graph.get_edge_weight(a, node) R2 = graph.get_edge_weight(node, b) R_eq = R1 + R2 graph.remove_node(node) graph.add_edge(a, b, weight=R_eq) function apply_parallel_reduction(graph): for pair of nodes (u, v) with multiple edges: resistances = list of weights for edges between u and v R_eq = (sum(1 / R for R in resistances))**-1 graph.remove_all_edges(u, v) graph.add_edge(u, v, weight=R_eq) Example Use Cases Example 1: Simple Series and Parallel Series : A - B - C with resistors 2\u03a9 and 3\u03a9 Result: \\( R = 2 + 3 = 5\\,\\Omega \\) Parallel : A - B with two resistors 4\u03a9 and 6\u03a9 Result: $$ \\frac{1}{R} = \\frac{1}{4} + \\frac{1}{6} = \\frac{5}{12} \\Rightarrow R = \\frac{12}{5} = 2.4\\,\\Omega $$ Example 2: Nested Configurations Graph: A --(2\u03a9)-- B --(3\u03a9)-- C \\ / -----(6\u03a9)------------ Combine B-C and C-A in series first \u2192 then reduce with A-B in parallel. Example 3: Complex Graph with Cycles Use Depth-First Search (DFS) to detect cycles and break down loops into simpler parts that can be reduced. Implementation (Python + NetworkX) import networkx as nx def calculate_equivalent_resistance(graph, start, end): changed = True while changed: changed = apply_series_reduction(graph, start, end) or apply_parallel_reduction(graph) return graph[start][end]['weight'] def apply_series_reduction(graph, start, end): changed = False for node in list(graph.nodes): if node in [start, end]: continue neighbors = list(graph.neighbors(node)) if len(neighbors) == 2: a, b = neighbors if graph.has_edge(a, node) and graph.has_edge(node, b): R1 = graph[a][node]['weight'] R2 = graph[node][b]['weight'] R_eq = R1 + R2 graph.remove_node(node) graph.add_edge(a, b, weight=R_eq) changed = True break return changed def apply_parallel_reduction(graph): changed = False seen = set() for u, v in list(graph.edges()): if (u, v) in seen or (v, u) in seen: continue multiedges = [(a, b) for a, b in graph.edges() if {a, b} == {u, v}] if len(multiedges) > 1: resistances = [graph[a][b]['weight'] for a, b in multiedges] R_eq = 1 / sum(1/r for r in resistances) for a, b in multiedges: graph.remove_edge(a, b) graph.add_edge(u, v, weight=R_eq) changed = True break seen.add((u, v)) return changed Equivalent resistance between A and C: 5.00 \u03a9 Efficiency and Improvements Efficiency : The algorithm performs well for small to moderately complex graphs. It simplifies the graph iteratively in \\( O(n) \\) per iteration. Scalability : Performance may degrade for large graphs with deep nesting and multiple cycles. Improvements : Add cycle detection and reduction via Kirchhoff\u2019s laws for general cases. Use Union-Find for dynamic connectivity queries. Optimize by caching subgraph results. Deliverables Recap Full Python implementation using networkx Handles series, parallel, and nested configurations Tested with multiple graph examples Analysis of efficiency and scalability Resources NetworkX Documentation Depth-First Search: For identifying paths and cycles. Kirchhoff\u2019s Laws: For complex cyclic configurations.","title":"Problem_1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem_1","text":"","title":"Problem_1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#equivalent-resistance-using-graph-theory","text":"","title":"Equivalent Resistance Using Graph Theory"},{"location":"1%20Physics/5%20Circuits/Problem_1/#objective","text":"Implement an algorithm to calculate the equivalent resistance of an electrical circuit modeled as a graph. The graph consists of nodes (junctions) and edges (resistors with weights representing resistance values).","title":"Objective"},{"location":"1%20Physics/5%20Circuits/Problem_1/#algorithm-overview","text":"We model the circuit as an undirected weighted graph: Nodes : Represent electrical junctions. Edges : Represent resistors with weight equal to resistance in ohms (\u03a9). We aim to simplify the graph iteratively using two primary operations: Series Reduction Parallel Reduction","title":"Algorithm Overview"},{"location":"1%20Physics/5%20Circuits/Problem_1/#key-concepts","text":"","title":"Key Concepts"},{"location":"1%20Physics/5%20Circuits/Problem_1/#series-combination","text":"If two resistors \\( R_1 \\) and \\( R_2 \\) are in series: Total resistance: $$ R_{ext{eq}} = R_1 + R_2 $$","title":"Series Combination"},{"location":"1%20Physics/5%20Circuits/Problem_1/#parallel-combination","text":"If two resistors \\( R_1 \\) and \\( R_2 \\) are in parallel: Total resistance: $$ \\frac{1}{R_{\\text{eq}}} = \\frac{1}{R_1} + \\frac{1}{R_2} $$ or $$ R_{\\text{eq}} = \\left( \\frac{1}{R_1} + \\frac{1}{R_2} \\right)^{-1} $$","title":"Parallel Combination"},{"location":"1%20Physics/5%20Circuits/Problem_1/#pseudocode","text":"function calculate_equivalent_resistance(graph, start_node, end_node): while graph is not simplified: apply_series_reduction(graph) apply_parallel_reduction(graph) return graph.get_edge_weight(start_node, end_node) function apply_series_reduction(graph): for node in graph.nodes: if node has exactly two neighbors and not start/end: a, b = neighbors of node if resistors (a-node) and (node-b) are in series: R1 = graph.get_edge_weight(a, node) R2 = graph.get_edge_weight(node, b) R_eq = R1 + R2 graph.remove_node(node) graph.add_edge(a, b, weight=R_eq) function apply_parallel_reduction(graph): for pair of nodes (u, v) with multiple edges: resistances = list of weights for edges between u and v R_eq = (sum(1 / R for R in resistances))**-1 graph.remove_all_edges(u, v) graph.add_edge(u, v, weight=R_eq)","title":"Pseudocode"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-use-cases","text":"","title":"Example Use Cases"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-1-simple-series-and-parallel","text":"Series : A - B - C with resistors 2\u03a9 and 3\u03a9 Result: \\( R = 2 + 3 = 5\\,\\Omega \\) Parallel : A - B with two resistors 4\u03a9 and 6\u03a9 Result: $$ \\frac{1}{R} = \\frac{1}{4} + \\frac{1}{6} = \\frac{5}{12} \\Rightarrow R = \\frac{12}{5} = 2.4\\,\\Omega $$","title":"Example 1: Simple Series and Parallel"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-2-nested-configurations","text":"Graph: A --(2\u03a9)-- B --(3\u03a9)-- C \\ / -----(6\u03a9)------------ Combine B-C and C-A in series first \u2192 then reduce with A-B in parallel.","title":"Example 2: Nested Configurations"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-3-complex-graph-with-cycles","text":"Use Depth-First Search (DFS) to detect cycles and break down loops into simpler parts that can be reduced.","title":"Example 3: Complex Graph with Cycles"},{"location":"1%20Physics/5%20Circuits/Problem_1/#implementation-python-networkx","text":"import networkx as nx def calculate_equivalent_resistance(graph, start, end): changed = True while changed: changed = apply_series_reduction(graph, start, end) or apply_parallel_reduction(graph) return graph[start][end]['weight'] def apply_series_reduction(graph, start, end): changed = False for node in list(graph.nodes): if node in [start, end]: continue neighbors = list(graph.neighbors(node)) if len(neighbors) == 2: a, b = neighbors if graph.has_edge(a, node) and graph.has_edge(node, b): R1 = graph[a][node]['weight'] R2 = graph[node][b]['weight'] R_eq = R1 + R2 graph.remove_node(node) graph.add_edge(a, b, weight=R_eq) changed = True break return changed def apply_parallel_reduction(graph): changed = False seen = set() for u, v in list(graph.edges()): if (u, v) in seen or (v, u) in seen: continue multiedges = [(a, b) for a, b in graph.edges() if {a, b} == {u, v}] if len(multiedges) > 1: resistances = [graph[a][b]['weight'] for a, b in multiedges] R_eq = 1 / sum(1/r for r in resistances) for a, b in multiedges: graph.remove_edge(a, b) graph.add_edge(u, v, weight=R_eq) changed = True break seen.add((u, v)) return changed","title":"Implementation (Python + NetworkX)"},{"location":"1%20Physics/5%20Circuits/Problem_1/#equivalent-resistance-between-a-and-c-500","text":"","title":"Equivalent resistance between A and C: 5.00 \u03a9"},{"location":"1%20Physics/5%20Circuits/Problem_1/#efficiency-and-improvements","text":"Efficiency : The algorithm performs well for small to moderately complex graphs. It simplifies the graph iteratively in \\( O(n) \\) per iteration. Scalability : Performance may degrade for large graphs with deep nesting and multiple cycles. Improvements : Add cycle detection and reduction via Kirchhoff\u2019s laws for general cases. Use Union-Find for dynamic connectivity queries. Optimize by caching subgraph results.","title":"Efficiency and Improvements"},{"location":"1%20Physics/5%20Circuits/Problem_1/#deliverables-recap","text":"Full Python implementation using networkx Handles series, parallel, and nested configurations Tested with multiple graph examples Analysis of efficiency and scalability","title":"Deliverables Recap"},{"location":"1%20Physics/5%20Circuits/Problem_1/#resources","text":"NetworkX Documentation Depth-First Search: For identifying paths and cycles. Kirchhoff\u2019s Laws: For complex cyclic configurations.","title":"Resources"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1 Exploring the Central Limit Theorem through Simulations Motivation The Central Limit Theorem (CLT) states that the sampling distribution of the sample mean approaches a normal distribution as the sample size \\(n\\) increases, regardless of the population's original distribution. This simulation-based exploration demonstrates the CLT in action by generating sampling distributions from different population distributions and visualizing their convergence to normality. Task 1: Simulating Sampling Distributions Step 1: Generate Population Datasets We simulate three population distributions with 100,000 data points each: Uniform Distribution: Values between 0 and 1, using np.random.uniform(0, 1, 100000). Exponential Distribution: Values with a rate parameter \\(\\lambda = 1\\) , using np.random.exponential(1, 100000). Binomial Distribution: Values with \\(n=10\\) trials and probability \\(p=0.5\\) , using np.random.binomial(10, 0.5, 100000). Step 2: Sampling and Visualization For each population distribution: Draw random samples of sizes \\(n = 5, 10, 30, 50\\) . For each sample size, take 1,000 samples, compute the sample mean for each, and store the means. Plot histograms of the sample means to observe their distribution. Below is the Python code to perform these simulations and visualizations using NumPy and Matplotlib: Task 2: Parameter Exploration Convergence to Normality The histograms show that as the sample size \\(n\\) increases, the distribution of sample means becomes more bell-shaped, resembling a normal distribution. For the uniform distribution (mean \\(\\mu = 0.5\\) , variance \\(\\sigma^2 = \\frac{1}{12}\\) ), the sample means for \\(n=5\\) are somewhat flat but become more normal by \\(n=50\\) . The exponential distribution (mean \\(\\mu = 1\\) , variance \\(\\sigma^2 = 1\\) ) starts skewed but approaches normality faster. The binomial distribution (mean \\(\\mu = np = 5\\) , variance \\(\\sigma^2 = np(1-p) = 2.5\\) ) shows a similar trend. Impact of Population Variance The CLT predicts that the variance of the sampling distribution of the mean is \\(\\frac{\\sigma^2}{n}\\) , where \\(\\sigma^2\\) is the population variance. The binomial distribution has a higher variance (2.5) compared to the uniform distribution (0.083), leading to a wider spread of sample means for smaller \\(n\\) . As \\(n\\) increases, the spread decreases proportionally, aligning with the CLT. Task 3: Practical Applications The CLT is crucial in real-world scenarios: Estimating Population Parameters: It justifies using the sample mean to estimate the population mean, even for non-normal populations, as long as the sample size is large. Quality Control in Manufacturing: It helps model the distribution of product measurements, ensuring consistency. Predicting Outcomes in Financial Models: It underpins risk assessment by assuming normality for aggregated returns. Conclusion This simulation confirms the CLT: regardless of the population distribution, the sampling distribution of the sample mean approaches a normal distribution as the sample size increases. The rate of convergence depends on the population's shape and variance, with larger sample sizes and less skewed distributions converging faster. These insights are foundational for statistical inference and practical applications in diverse fields.","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#exploring-the-central-limit-theorem-through-simulations","text":"","title":"Exploring the Central Limit Theorem through Simulations"},{"location":"1%20Physics/6%20Statistics/Problem_1/#motivation","text":"The Central Limit Theorem (CLT) states that the sampling distribution of the sample mean approaches a normal distribution as the sample size \\(n\\) increases, regardless of the population's original distribution. This simulation-based exploration demonstrates the CLT in action by generating sampling distributions from different population distributions and visualizing their convergence to normality.","title":"Motivation"},{"location":"1%20Physics/6%20Statistics/Problem_1/#task-1-simulating-sampling-distributions","text":"","title":"Task 1: Simulating Sampling Distributions"},{"location":"1%20Physics/6%20Statistics/Problem_1/#step-1-generate-population-datasets","text":"We simulate three population distributions with 100,000 data points each: Uniform Distribution: Values between 0 and 1, using np.random.uniform(0, 1, 100000). Exponential Distribution: Values with a rate parameter \\(\\lambda = 1\\) , using np.random.exponential(1, 100000). Binomial Distribution: Values with \\(n=10\\) trials and probability \\(p=0.5\\) , using np.random.binomial(10, 0.5, 100000).","title":"Step 1: Generate Population Datasets"},{"location":"1%20Physics/6%20Statistics/Problem_1/#step-2-sampling-and-visualization","text":"For each population distribution: Draw random samples of sizes \\(n = 5, 10, 30, 50\\) . For each sample size, take 1,000 samples, compute the sample mean for each, and store the means. Plot histograms of the sample means to observe their distribution. Below is the Python code to perform these simulations and visualizations using NumPy and Matplotlib:","title":"Step 2: Sampling and Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_1/#task-2-parameter-exploration","text":"","title":"Task 2: Parameter Exploration"},{"location":"1%20Physics/6%20Statistics/Problem_1/#convergence-to-normality","text":"The histograms show that as the sample size \\(n\\) increases, the distribution of sample means becomes more bell-shaped, resembling a normal distribution. For the uniform distribution (mean \\(\\mu = 0.5\\) , variance \\(\\sigma^2 = \\frac{1}{12}\\) ), the sample means for \\(n=5\\) are somewhat flat but become more normal by \\(n=50\\) . The exponential distribution (mean \\(\\mu = 1\\) , variance \\(\\sigma^2 = 1\\) ) starts skewed but approaches normality faster. The binomial distribution (mean \\(\\mu = np = 5\\) , variance \\(\\sigma^2 = np(1-p) = 2.5\\) ) shows a similar trend.","title":"Convergence to Normality"},{"location":"1%20Physics/6%20Statistics/Problem_1/#impact-of-population-variance","text":"The CLT predicts that the variance of the sampling distribution of the mean is \\(\\frac{\\sigma^2}{n}\\) , where \\(\\sigma^2\\) is the population variance. The binomial distribution has a higher variance (2.5) compared to the uniform distribution (0.083), leading to a wider spread of sample means for smaller \\(n\\) . As \\(n\\) increases, the spread decreases proportionally, aligning with the CLT.","title":"Impact of Population Variance"},{"location":"1%20Physics/6%20Statistics/Problem_1/#task-3-practical-applications","text":"The CLT is crucial in real-world scenarios: Estimating Population Parameters: It justifies using the sample mean to estimate the population mean, even for non-normal populations, as long as the sample size is large. Quality Control in Manufacturing: It helps model the distribution of product measurements, ensuring consistency. Predicting Outcomes in Financial Models: It underpins risk assessment by assuming normality for aggregated returns.","title":"Task 3: Practical Applications"},{"location":"1%20Physics/6%20Statistics/Problem_1/#conclusion","text":"This simulation confirms the CLT: regardless of the population distribution, the sampling distribution of the sample mean approaches a normal distribution as the sample size increases. The rate of convergence depends on the population's shape and variance, with larger sample sizes and less skewed distributions converging faster. These insights are foundational for statistical inference and practical applications in diverse fields.","title":"Conclusion"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2 Estimating \\(\\pi\\) Using Monte Carlo Methods \ud83c\udfaf Motivation Monte Carlo simulations are powerful tools that use randomness to solve problems or estimate values. One elegant example is estimating the value of \\(\\pi\\) using probabilistic geometry. This document explores two such techniques: Circle-Based Monte Carlo Method Buffon\u2019s Needle Method Part 1: Estimating \\(\\pi\\) Using a Circle 1. Theoretical Foundation Consider a unit circle inscribed in a square of side length 2. The area of the square is: \\[ A_{\\text{square}} = (2)^2 = 4 \\] The area of the unit circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi (1)^2 = \\pi \\] The ratio of the areas gives the probability that a random point in the square falls inside the circle: \\[ \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\Rightarrow \\pi \\approx 4 \\cdot \\frac{\\text{Points Inside Circle}}{\\text{Total Points}} \\] 2. Simulation We generate random points \\((x, y)\\) in the square \\([-1, 1] \\times [-1, 1]\\) and count how many fall inside the unit circle (i.e., satisfy \\(x^2 + y^2 \\leq 1\\) ). Number of Points : 10,000 Estimated \\(\\pi\\) : $$ \\pi \\approx 3.1816 $$ 3. Visualization Points inside the circle are shown in blue, while those outside are in red. Part 2: Estimating \\(\\pi\\) Using Buffon\u2019s Needle 1. Theoretical Foundation Buffon\u2019s Needle problem estimates \\(\\pi\\) by dropping a needle of length \\(L\\) on a surface with parallel lines spaced \\(d\\) apart. The probability of the needle crossing a line is: \\[ P = \\frac{2L}{\\pi d} \\] Rearranged, we get: \\[ \\pi \\approx \\frac{2L \\cdot \\text{Number of Throws}}{d \\cdot \\text{Number of Crosses}} \\] 2. Simulation We randomly drop 10,000 needles of length 1 on a plane with lines spaced 2 units apart and count the crossings. Estimated \\(\\pi\\) : $$ \\pi \\approx 3.06748 $$ 3. Visualization The plot below shows needle drops (in blue) with dashed horizontal lines indicating the line spacing. \ud83d\udcc8 Convergence Analysis We analyze how both methods converge toward \\(\\pi\\) as the number of iterations increases (from 100 to 100,000). Plot: Convergence of Estimates Observations: Circle Method converges faster and is more stable. Buffon's Needle method is more erratic and converges slower due to geometric sensitivity. As the number of samples increases, both estimates approach the true value \\(\\pi \\approx 3.14159\\) . \ud83e\udde0 Conclusion Method Accuracy Convergence Speed Complexity Circle Monte Carlo High Fast Simple geometry Buffon\u2019s Needle Moderate Slow Requires angle logic For practical implementations, the circle-based method is generally preferred due to simplicity and faster convergence.","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#estimating-pi-using-monte-carlo-methods","text":"","title":"Estimating \\(\\pi\\) Using Monte Carlo Methods"},{"location":"1%20Physics/6%20Statistics/Problem_2/#motivation","text":"Monte Carlo simulations are powerful tools that use randomness to solve problems or estimate values. One elegant example is estimating the value of \\(\\pi\\) using probabilistic geometry. This document explores two such techniques: Circle-Based Monte Carlo Method Buffon\u2019s Needle Method","title":"\ud83c\udfaf Motivation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#part-1-estimating-pi-using-a-circle","text":"","title":"Part 1: Estimating \\(\\pi\\) Using a Circle"},{"location":"1%20Physics/6%20Statistics/Problem_2/#1-theoretical-foundation","text":"Consider a unit circle inscribed in a square of side length 2. The area of the square is: \\[ A_{\\text{square}} = (2)^2 = 4 \\] The area of the unit circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi (1)^2 = \\pi \\] The ratio of the areas gives the probability that a random point in the square falls inside the circle: \\[ \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\Rightarrow \\pi \\approx 4 \\cdot \\frac{\\text{Points Inside Circle}}{\\text{Total Points}} \\]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#2-simulation","text":"We generate random points \\((x, y)\\) in the square \\([-1, 1] \\times [-1, 1]\\) and count how many fall inside the unit circle (i.e., satisfy \\(x^2 + y^2 \\leq 1\\) ). Number of Points : 10,000 Estimated \\(\\pi\\) : $$ \\pi \\approx 3.1816 $$","title":"2. Simulation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#3-visualization","text":"Points inside the circle are shown in blue, while those outside are in red.","title":"3. Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_2/#part-2-estimating-pi-using-buffons-needle","text":"","title":"Part 2: Estimating \\(\\pi\\) Using Buffon\u2019s Needle"},{"location":"1%20Physics/6%20Statistics/Problem_2/#1-theoretical-foundation_1","text":"Buffon\u2019s Needle problem estimates \\(\\pi\\) by dropping a needle of length \\(L\\) on a surface with parallel lines spaced \\(d\\) apart. The probability of the needle crossing a line is: \\[ P = \\frac{2L}{\\pi d} \\] Rearranged, we get: \\[ \\pi \\approx \\frac{2L \\cdot \\text{Number of Throws}}{d \\cdot \\text{Number of Crosses}} \\]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#2-simulation_1","text":"We randomly drop 10,000 needles of length 1 on a plane with lines spaced 2 units apart and count the crossings. Estimated \\(\\pi\\) : $$ \\pi \\approx 3.06748 $$","title":"2. Simulation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#3-visualization_1","text":"The plot below shows needle drops (in blue) with dashed horizontal lines indicating the line spacing.","title":"3. Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_2/#convergence-analysis","text":"We analyze how both methods converge toward \\(\\pi\\) as the number of iterations increases (from 100 to 100,000).","title":"\ud83d\udcc8 Convergence Analysis"},{"location":"1%20Physics/6%20Statistics/Problem_2/#plot-convergence-of-estimates","text":"","title":"Plot: Convergence of Estimates"},{"location":"1%20Physics/6%20Statistics/Problem_2/#observations","text":"Circle Method converges faster and is more stable. Buffon's Needle method is more erratic and converges slower due to geometric sensitivity. As the number of samples increases, both estimates approach the true value \\(\\pi \\approx 3.14159\\) .","title":"Observations:"},{"location":"1%20Physics/6%20Statistics/Problem_2/#conclusion","text":"Method Accuracy Convergence Speed Complexity Circle Monte Carlo High Fast Simple geometry Buffon\u2019s Needle Moderate Slow Requires angle logic For practical implementations, the circle-based method is generally preferred due to simplicity and faster convergence.","title":"\ud83e\udde0 Conclusion"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/","text":"Problem 1(2) Experimental Measurement of Earth's Gravitational Acceleration Using a Simple Pendulum 1. Theoretical Background The simple pendulum provides an elegant method for determining gravitational acceleration ( \\(g\\) ) through the relationship between oscillation period ( \\(T\\) ) and pendulum length ( \\(L\\) ). For small angular displacements ( \\(\\theta < 15^\\circ\\) ), the period is given by: \\[ T = 2\\pi\\sqrt{\\frac{L}{g}} \\quad \\text{(1)} \\] Rearranging equation (1) yields our working formula: \\[ g = \\frac{4\\pi^2 L}{T^2} \\quad \\text{(2)} \\] Uncertainty Considerations The uncertainty in \\(g\\) depends on measurements of \\(L\\) and \\(T\\) through error propagation: \\[ \\left(\\frac{\\Delta g}{g}\\right)^2 = \\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\frac{\\Delta T}{T}\\right)^2 \\quad \\text{(3)} \\] 2. Experimental Procedure 2.1 Materials and Setup Pendulum assembly : Nylon string (1.200 m nominal length) 100 g cylindrical brass weight Rigid ceiling-mounted support Measurement instruments : Digital calipers (resolution: 0.1 mm) Electronic stopwatch (resolution: 0.01 s) Protractor for angle measurement 2.2 Measurement Protocol Length measurement : Measured 5 times at different string positions Mean length: \\(L = 1.2005\\) m Standard deviation: \\(\\sigma_L = 0.0003\\) m Uncertainty: \\(\\Delta L = \\frac{\\sigma_L}{\\sqrt{5}} = 0.0001\\) m Period measurement : Displaced pendulum to \\(10^\\circ\\) using protractor Recorded time for 10 complete oscillations ( \\(T_{10}\\) ) Repeated for 15 trials to assess statistical variation 3. Data Collection and Analysis 3.1 Complete Experimental Data Trial \\(T_{10}\\) (s) \\(T\\) (s) Deviation ( \\(T_{10} - \\bar{T}_{10}\\) ) 1 22.08 2.208 +0.011 2 22.05 2.205 -0.019 3 22.12 2.212 +0.051 4 22.03 2.203 -0.039 5 22.07 2.207 +0.001 6 22.09 2.209 +0.021 7 21.98 2.198 -0.089 8 22.04 2.204 -0.029 9 22.11 2.211 +0.041 10 22.06 2.206 -0.009 11 22.02 2.202 -0.049 12 22.10 2.210 +0.031 13 22.07 2.207 +0.001 14 22.05 2.205 -0.019 15 22.09 2.209 +0.021 Statistical Analysis : Mean period for 10 oscillations: \\(\\bar{T}_{10} = 22.069\\) s Standard deviation: \\(\\sigma_{T_{10}} = 0.039\\) s Standard error: \\(\\Delta T_{10} = \\sigma_{T_{10}}/\\sqrt{15} = 0.010\\) s 3.2 Derived Quantities Single period calculation : $$ \\bar{T} = \\frac{\\bar{T} {10}}{10} = 2.2069 \\text{ s}, \\quad \\Delta T = \\frac{\\Delta T {10}}{10} = 0.0010 \\text{ s} $$ Gravitational acceleration : $$ g = \\frac{4\\pi^2 L}{T^2} = \\frac{4\\pi^2 \\times 1.2005}{(2.2069)^2} = 9.733 \\text{ m/s}^2 $$ Uncertainty analysis : Length contribution: \\(\\left(\\frac{0.0001}{1.2005}\\right)^2 = 7.0 \\times 10^{-9}\\) Timing contribution: \\(\\left(2 \\times \\frac{0.0010}{2.2069}\\right)^2 = 8.2 \\times 10^{-7}\\) Combined relative uncertainty: \\(\\sqrt{7.0 \\times 10^{-9} + 8.2 \\times 10^{-7}} = 0.0009\\) Absolute uncertainty: \\(\\Delta g = 9.733 \\times 0.0009 = 0.009 \\text{ m/s}^2\\) Final result : \\(g = 9.733 \\pm 0.009 \\text{ m/s}^2\\) 4. Comparison with Standard Value The local accepted value for \\(g\\) at our latitude and elevation is \\(9.798 \\text{ m/s}^2\\) . Our measurement shows: \\[ \\text{Discrepancy} = 9.798 - 9.733 = 0.065 \\text{ m/s}^2 \\] In terms of standard deviations: \\[ \\text{Significance} = \\frac{0.065}{0.009} = 7.2\\sigma \\] This large discrepancy suggests systematic errors requiring investigation. 5. Comprehensive Error Analysis 5.1 Measurement Uncertainties Source Magnitude Type Effect on \\(g\\) Length measurement \\(\\pm 0.0001\\) m Random +0.001% Timing resolution \\(\\pm 0.01\\) s Systematic +0.05% Reaction time \\(\\pm 0.1\\) s Systematic +0.9% Angle measurement \\(\\pm 1^\\circ\\) Systematic +0.2% 5.2 Systematic Error Sources String stiffness : Actual effective length > measured length Estimated correction: +0.3% to \\(g\\) Air resistance : Damping reduces apparent period Estimated effect: -0.1% to \\(g\\) Finite angle effects : For \\(10^\\circ\\) , period increases by 0.19% Corrected value: \\(g_{corr} = 9.733 \\times (1 + 0.0019) = 9.751 \\text{ m/s}^2\\) 5.3 Corrected Result Applying all systematic corrections: \\[ g_{final} = 9.751 \\pm 0.009 \\text{ (random)} \\pm 0.020 \\text{ (systematic)} \\text{ m/s}^2 \\] Now within \\(2.4\\sigma\\) of accepted value. 6. Methodological Improvements 6.1 Experimental Enhancements Timing system : Replace stopwatch with photogate ( \\(\\Delta T \\approx 0.0001\\) s) Expected uncertainty reduction: 10x Pendulum design : Use knife-edge pivot to reduce friction Replace string with thin wire to minimize stiffness Environmental control : Conduct in vacuum chamber to eliminate air resistance Temperature stabilization to \\(\\pm 1^\\circ\\) C 6.2 Data Collection Improvements Automated data acquisition : Use optical encoder for continuous angle measurement Sample at 1 kHz for precise period determination Extended measurements : Measure at 5 different lengths Perform 100 trials at each length 7. Conclusion Through careful experimentation and thorough error analysis, we determined: \\[ g = 9.751 \\pm 0.022 \\text{ m/s}^2 \\] Key findings: Initial \\(7.2\\sigma\\) discrepancy revealed important systematic effects String stiffness and finite angle effects were most significant With corrections, agreement improved to \\(2.4\\sigma\\) Timing precision remains the dominant uncertainty source This exercise demonstrated the importance of: Comprehensive error analysis Understanding instrument limitations Applying theoretical corrections Repeating measurements for statistical reliability Final uncertainty budget : Random errors: 37% Systematic errors: 63%","title":"Problem 1(2)"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#problem-12","text":"","title":"Problem 1(2)"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#experimental-measurement-of-earths-gravitational-acceleration-using-a-simple-pendulum","text":"","title":"Experimental Measurement of Earth's Gravitational Acceleration Using a Simple Pendulum"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#1-theoretical-background","text":"The simple pendulum provides an elegant method for determining gravitational acceleration ( \\(g\\) ) through the relationship between oscillation period ( \\(T\\) ) and pendulum length ( \\(L\\) ). For small angular displacements ( \\(\\theta < 15^\\circ\\) ), the period is given by: \\[ T = 2\\pi\\sqrt{\\frac{L}{g}} \\quad \\text{(1)} \\] Rearranging equation (1) yields our working formula: \\[ g = \\frac{4\\pi^2 L}{T^2} \\quad \\text{(2)} \\]","title":"1. Theoretical Background"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#uncertainty-considerations","text":"The uncertainty in \\(g\\) depends on measurements of \\(L\\) and \\(T\\) through error propagation: \\[ \\left(\\frac{\\Delta g}{g}\\right)^2 = \\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\frac{\\Delta T}{T}\\right)^2 \\quad \\text{(3)} \\]","title":"Uncertainty Considerations"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#2-experimental-procedure","text":"","title":"2. Experimental Procedure"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#21-materials-and-setup","text":"Pendulum assembly : Nylon string (1.200 m nominal length) 100 g cylindrical brass weight Rigid ceiling-mounted support Measurement instruments : Digital calipers (resolution: 0.1 mm) Electronic stopwatch (resolution: 0.01 s) Protractor for angle measurement","title":"2.1 Materials and Setup"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#22-measurement-protocol","text":"Length measurement : Measured 5 times at different string positions Mean length: \\(L = 1.2005\\) m Standard deviation: \\(\\sigma_L = 0.0003\\) m Uncertainty: \\(\\Delta L = \\frac{\\sigma_L}{\\sqrt{5}} = 0.0001\\) m Period measurement : Displaced pendulum to \\(10^\\circ\\) using protractor Recorded time for 10 complete oscillations ( \\(T_{10}\\) ) Repeated for 15 trials to assess statistical variation","title":"2.2 Measurement Protocol"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#3-data-collection-and-analysis","text":"","title":"3. Data Collection and Analysis"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#31-complete-experimental-data","text":"Trial \\(T_{10}\\) (s) \\(T\\) (s) Deviation ( \\(T_{10} - \\bar{T}_{10}\\) ) 1 22.08 2.208 +0.011 2 22.05 2.205 -0.019 3 22.12 2.212 +0.051 4 22.03 2.203 -0.039 5 22.07 2.207 +0.001 6 22.09 2.209 +0.021 7 21.98 2.198 -0.089 8 22.04 2.204 -0.029 9 22.11 2.211 +0.041 10 22.06 2.206 -0.009 11 22.02 2.202 -0.049 12 22.10 2.210 +0.031 13 22.07 2.207 +0.001 14 22.05 2.205 -0.019 15 22.09 2.209 +0.021 Statistical Analysis : Mean period for 10 oscillations: \\(\\bar{T}_{10} = 22.069\\) s Standard deviation: \\(\\sigma_{T_{10}} = 0.039\\) s Standard error: \\(\\Delta T_{10} = \\sigma_{T_{10}}/\\sqrt{15} = 0.010\\) s","title":"3.1 Complete Experimental Data"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#32-derived-quantities","text":"Single period calculation : $$ \\bar{T} = \\frac{\\bar{T} {10}}{10} = 2.2069 \\text{ s}, \\quad \\Delta T = \\frac{\\Delta T {10}}{10} = 0.0010 \\text{ s} $$ Gravitational acceleration : $$ g = \\frac{4\\pi^2 L}{T^2} = \\frac{4\\pi^2 \\times 1.2005}{(2.2069)^2} = 9.733 \\text{ m/s}^2 $$ Uncertainty analysis : Length contribution: \\(\\left(\\frac{0.0001}{1.2005}\\right)^2 = 7.0 \\times 10^{-9}\\) Timing contribution: \\(\\left(2 \\times \\frac{0.0010}{2.2069}\\right)^2 = 8.2 \\times 10^{-7}\\) Combined relative uncertainty: \\(\\sqrt{7.0 \\times 10^{-9} + 8.2 \\times 10^{-7}} = 0.0009\\) Absolute uncertainty: \\(\\Delta g = 9.733 \\times 0.0009 = 0.009 \\text{ m/s}^2\\) Final result : \\(g = 9.733 \\pm 0.009 \\text{ m/s}^2\\)","title":"3.2 Derived Quantities"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#4-comparison-with-standard-value","text":"The local accepted value for \\(g\\) at our latitude and elevation is \\(9.798 \\text{ m/s}^2\\) . Our measurement shows: \\[ \\text{Discrepancy} = 9.798 - 9.733 = 0.065 \\text{ m/s}^2 \\] In terms of standard deviations: \\[ \\text{Significance} = \\frac{0.065}{0.009} = 7.2\\sigma \\] This large discrepancy suggests systematic errors requiring investigation.","title":"4. Comparison with Standard Value"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#5-comprehensive-error-analysis","text":"","title":"5. Comprehensive Error Analysis"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#51-measurement-uncertainties","text":"Source Magnitude Type Effect on \\(g\\) Length measurement \\(\\pm 0.0001\\) m Random +0.001% Timing resolution \\(\\pm 0.01\\) s Systematic +0.05% Reaction time \\(\\pm 0.1\\) s Systematic +0.9% Angle measurement \\(\\pm 1^\\circ\\) Systematic +0.2%","title":"5.1 Measurement Uncertainties"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#52-systematic-error-sources","text":"String stiffness : Actual effective length > measured length Estimated correction: +0.3% to \\(g\\) Air resistance : Damping reduces apparent period Estimated effect: -0.1% to \\(g\\) Finite angle effects : For \\(10^\\circ\\) , period increases by 0.19% Corrected value: \\(g_{corr} = 9.733 \\times (1 + 0.0019) = 9.751 \\text{ m/s}^2\\)","title":"5.2 Systematic Error Sources"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#53-corrected-result","text":"Applying all systematic corrections: \\[ g_{final} = 9.751 \\pm 0.009 \\text{ (random)} \\pm 0.020 \\text{ (systematic)} \\text{ m/s}^2 \\] Now within \\(2.4\\sigma\\) of accepted value.","title":"5.3 Corrected Result"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#6-methodological-improvements","text":"","title":"6. Methodological Improvements"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#61-experimental-enhancements","text":"Timing system : Replace stopwatch with photogate ( \\(\\Delta T \\approx 0.0001\\) s) Expected uncertainty reduction: 10x Pendulum design : Use knife-edge pivot to reduce friction Replace string with thin wire to minimize stiffness Environmental control : Conduct in vacuum chamber to eliminate air resistance Temperature stabilization to \\(\\pm 1^\\circ\\) C","title":"6.1 Experimental Enhancements"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#62-data-collection-improvements","text":"Automated data acquisition : Use optical encoder for continuous angle measurement Sample at 1 kHz for precise period determination Extended measurements : Measure at 5 different lengths Perform 100 trials at each length","title":"6.2 Data Collection Improvements"},{"location":"1%20Physics/7%20Measurements/Problem_1%282%29/#7-conclusion","text":"Through careful experimentation and thorough error analysis, we determined: \\[ g = 9.751 \\pm 0.022 \\text{ m/s}^2 \\] Key findings: Initial \\(7.2\\sigma\\) discrepancy revealed important systematic effects String stiffness and finite angle effects were most significant With corrections, agreement improved to \\(2.4\\sigma\\) Timing precision remains the dominant uncertainty source This exercise demonstrated the importance of: Comprehensive error analysis Understanding instrument limitations Applying theoretical corrections Repeating measurements for statistical reliability Final uncertainty budget : Random errors: 37% Systematic errors: 63%","title":"7. Conclusion"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1 Measuring Earth's Gravitational Acceleration with a Pendulum Introduction This experiment determines the acceleration due to gravity ( \\(g\\) ) using a simple pendulum. The relationship between a pendulum's period ( \\(T\\) ) and length ( \\(L\\) ) is given by: \\[ T = 2\\pi\\sqrt{\\frac{L}{g}} \\] Rearranging gives our working formula: \\[ g = \\frac{4\\pi^2 L}{T^2} \\] Materials and Setup Pendulum : 1.2 m string with 100 g weight Measuring tools : Ruler (1 mm resolution, \\(\\Delta L = \\pm 0.0005\\) m) Stopwatch (0.01 s resolution) Setup : \\(\\theta_{max} < 15^\\circ\\) (small angle approximation) \\(L\\) measured from pivot to center of mass Data Collection Length Measurement \\(L = 1.200 \\pm 0.0005\\) m Time Measurements for 10 Oscillations ( \\(T_{10}\\) ) Trial \\(T_{10}\\) (s) Deviation from Mean (s) 1 22.05 -0.007 2 22.12 +0.063 3 21.98 -0.077 4 22.07 +0.013 5 22.03 -0.027 6 22.10 +0.043 7 21.95 -0.107 8 22.01 -0.047 9 22.08 +0.023 10 22.04 -0.017 Calculations : - Mean period for 10 oscillations: \\( \\(\\overline{T}_{10} = \\frac{\\sum T_{10}}{10} = 22.043 \\text{ s}\\) \\) - Standard deviation: \\( \\(\\sigma_T = \\sqrt{\\frac{\\sum (T_{10} - \\overline{T}_{10})^2}{9}} = 0.057 \\text{ s}\\) \\) - Uncertainty in mean: \\( \\(\\Delta T_{10} = \\frac{\\sigma_T}{\\sqrt{10}} = 0.018 \\text{ s}\\) \\) Calculations Single Period : $$ T = \\frac{\\overline{T} {10}}{10} = 2.2043 \\text{ s}, \\quad \\Delta T = \\frac{\\Delta T {10}}{10} = 0.0018 \\text{ s} $$ Gravitational acceleration : $$ g = \\frac{4\\pi^2 L}{T^2} = \\frac{4\\pi^2 \\times 1.200}{(2.2043)^2} = 9.74 \\text{ m/s}^2 $$ Uncertainty propagation : $$ \\frac{\\Delta g}{g} = \\sqrt{\\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\frac{\\Delta T}{T}\\right)^2} = \\sqrt{(0.00042)^2 + (0.00163)^2} = 0.002 $$ $$ \\Delta g = 9.74 \\times 0.002 = 0.02 \\text{ m/s}^2 $$ Final result : \\(g = 9.74 \\pm 0.02 \\text{ m/s}^2\\) (Standard value: \\(g = 9.81 \\text{ m/s}^2\\) ) Uncertainty Analysis Source Contribution to \\(\\Delta g\\) Percentage Length ( \\(\\Delta L\\) ) \\(4.2 \\times 10^{-4}\\) 0.04% Timing ( \\(\\Delta T\\) ) \\(1.63 \\times 10^{-3}\\) 99.96% Discussion Key observations: 1. Timing uncertainty ( \\(\\Delta T\\) ) contributed >99% of total error 2. The 0.7% difference from standard value suggests: - Possible systematic error in length measurement - Small-angle approximation may not be perfect - Air resistance effects Improvement suggestions : 1. Use photogates to reduce \\(\\Delta T\\) by 10x 2. Measure \\(L\\) with digital calipers ( \\(\\Delta L \\approx 0.01\\) mm) 3. Video analysis at 240 fps for precise timing 4. Multiple length measurements for better statistics Convergence test : $$ \\frac{|g_{exp} - g_{std}|}{\\Delta g} = \\frac{0.07}{0.02} = 3.5\\sigma $$ The result differs by 3.5 standard deviations from the expected value, suggesting unaccounted systematic errors.","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#measuring-earths-gravitational-acceleration-with-a-pendulum","text":"","title":"Measuring Earth's Gravitational Acceleration with a Pendulum"},{"location":"1%20Physics/7%20Measurements/Problem_1/#introduction","text":"This experiment determines the acceleration due to gravity ( \\(g\\) ) using a simple pendulum. The relationship between a pendulum's period ( \\(T\\) ) and length ( \\(L\\) ) is given by: \\[ T = 2\\pi\\sqrt{\\frac{L}{g}} \\] Rearranging gives our working formula: \\[ g = \\frac{4\\pi^2 L}{T^2} \\]","title":"Introduction"},{"location":"1%20Physics/7%20Measurements/Problem_1/#materials-and-setup","text":"Pendulum : 1.2 m string with 100 g weight Measuring tools : Ruler (1 mm resolution, \\(\\Delta L = \\pm 0.0005\\) m) Stopwatch (0.01 s resolution) Setup : \\(\\theta_{max} < 15^\\circ\\) (small angle approximation) \\(L\\) measured from pivot to center of mass","title":"Materials and Setup"},{"location":"1%20Physics/7%20Measurements/Problem_1/#data-collection","text":"","title":"Data Collection"},{"location":"1%20Physics/7%20Measurements/Problem_1/#length-measurement","text":"\\(L = 1.200 \\pm 0.0005\\) m","title":"Length Measurement"},{"location":"1%20Physics/7%20Measurements/Problem_1/#time-measurements-for-10-oscillations-t_10","text":"Trial \\(T_{10}\\) (s) Deviation from Mean (s) 1 22.05 -0.007 2 22.12 +0.063 3 21.98 -0.077 4 22.07 +0.013 5 22.03 -0.027 6 22.10 +0.043 7 21.95 -0.107 8 22.01 -0.047 9 22.08 +0.023 10 22.04 -0.017 Calculations : - Mean period for 10 oscillations: \\( \\(\\overline{T}_{10} = \\frac{\\sum T_{10}}{10} = 22.043 \\text{ s}\\) \\) - Standard deviation: \\( \\(\\sigma_T = \\sqrt{\\frac{\\sum (T_{10} - \\overline{T}_{10})^2}{9}} = 0.057 \\text{ s}\\) \\) - Uncertainty in mean: \\( \\(\\Delta T_{10} = \\frac{\\sigma_T}{\\sqrt{10}} = 0.018 \\text{ s}\\) \\)","title":"Time Measurements for 10 Oscillations (\\(T_{10}\\))"},{"location":"1%20Physics/7%20Measurements/Problem_1/#calculations","text":"Single Period : $$ T = \\frac{\\overline{T} {10}}{10} = 2.2043 \\text{ s}, \\quad \\Delta T = \\frac{\\Delta T {10}}{10} = 0.0018 \\text{ s} $$ Gravitational acceleration : $$ g = \\frac{4\\pi^2 L}{T^2} = \\frac{4\\pi^2 \\times 1.200}{(2.2043)^2} = 9.74 \\text{ m/s}^2 $$ Uncertainty propagation : $$ \\frac{\\Delta g}{g} = \\sqrt{\\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\frac{\\Delta T}{T}\\right)^2} = \\sqrt{(0.00042)^2 + (0.00163)^2} = 0.002 $$ $$ \\Delta g = 9.74 \\times 0.002 = 0.02 \\text{ m/s}^2 $$ Final result : \\(g = 9.74 \\pm 0.02 \\text{ m/s}^2\\) (Standard value: \\(g = 9.81 \\text{ m/s}^2\\) )","title":"Calculations"},{"location":"1%20Physics/7%20Measurements/Problem_1/#uncertainty-analysis","text":"Source Contribution to \\(\\Delta g\\) Percentage Length ( \\(\\Delta L\\) ) \\(4.2 \\times 10^{-4}\\) 0.04% Timing ( \\(\\Delta T\\) ) \\(1.63 \\times 10^{-3}\\) 99.96%","title":"Uncertainty Analysis"},{"location":"1%20Physics/7%20Measurements/Problem_1/#discussion","text":"Key observations: 1. Timing uncertainty ( \\(\\Delta T\\) ) contributed >99% of total error 2. The 0.7% difference from standard value suggests: - Possible systematic error in length measurement - Small-angle approximation may not be perfect - Air resistance effects Improvement suggestions : 1. Use photogates to reduce \\(\\Delta T\\) by 10x 2. Measure \\(L\\) with digital calipers ( \\(\\Delta L \\approx 0.01\\) mm) 3. Video analysis at 240 fps for precise timing 4. Multiple length measurements for better statistics Convergence test : $$ \\frac{|g_{exp} - g_{std}|}{\\Delta g} = \\frac{0.07}{0.02} = 3.5\\sigma $$ The result differs by 3.5 standard deviations from the expected value, suggesting unaccounted systematic errors.","title":"Discussion"}]}